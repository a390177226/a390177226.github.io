<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on ZZB's blog</title><link>https://a390177226.github.io/categories/javascript/</link><description>Recent content in JavaScript on ZZB's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>zzb2021.</copyright><lastBuildDate>Fri, 25 Jun 2021 12:49:07 +0800</lastBuildDate><atom:link href="https://a390177226.github.io/categories/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>[Dig Deeper]--AJAX</title><link>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-ajax/</link><pubDate>Fri, 25 Jun 2021 12:49:07 +0800</pubDate><guid>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-ajax/</guid><description>简介 AJAX = Asynchronous JavaScript And XML（异步的JavaScript和XML） AJAX 是一种无需重新加载整个网页的情况下，能够更新部分网页的技术 AJAX 不是一种编程语言，而是一种用于创建更好更快以及交互性更强的Web应用程序的技术 传统网页（即不用ajax技术的网页），想要更新内容或者提交一个表单，都需要重新加载整个网页
使用ajax技术的网页，通过在后台服务器进行少量的数据交换，就可以实现异步局部更新
利用ajax可以做：
注册时，输入用户名自动检测用户是否已经存在 登陆时，提示用户名密码错误 简单的例子 HTML页面：test.html
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;demo&amp;#34;&amp;gt; &amp;lt;h2&amp;gt;The XMLHttpRequest Object&amp;lt;/h2&amp;gt; &amp;lt;button type=&amp;#34;button&amp;#34; onclick=&amp;#34;loadDoc()&amp;#34;&amp;gt;Change Content&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; function loadDoc() { const xhttp = new XMLHttpRequest(); xhttp.onload = function () { document.getElementById(&amp;#34;demo&amp;#34;).innerHTML = this.responseText; } xhttp.open(&amp;#34;GET&amp;#34;, &amp;#34;ajax_info.txt&amp;#34;, true); xhttp.send(); } &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 文本：ajax_info.txt，在test.html同一级目录下
AJAX 如何工作 网页中发生一个事件（页面加载、按钮点击） 由 JavaScript 创建 XMLHttpRequest 对象 XMLHttpRequest 对象向 web 服务器发送请求 服务器处理该请求 服务器将响应发送回网页 由 JavaScript 读取响应 由 JavaScript 执行正确的动作（比如更新页面） XHR对象 所有现代浏览器都支持 XMLHttpRequest（XHR） 对象。</description></item></channel></rss>