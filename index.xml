<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ZZB's blog</title><link>https://a390177226.github.io/</link><description>Recent content on ZZB's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>zzb2021.</copyright><lastBuildDate>Tue, 10 Aug 2021 00:20:58 +0800</lastBuildDate><atom:link href="https://a390177226.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Mac技巧</title><link>https://a390177226.github.io/post/mac%E6%8A%80%E5%B7%A7/</link><pubDate>Tue, 10 Aug 2021 00:20:58 +0800</pubDate><guid>https://a390177226.github.io/post/mac%E6%8A%80%E5%B7%A7/</guid><description>ZZB's blog https://a390177226.github.io/post/mac%E6%8A%80%E5%B7%A7/ -&lt;h1 id="1">1&lt;/h1>
- https://a390177226.github.io/post/mac%E6%8A%80%E5%B7%A7/ - zzb2021.</description></item><item><title>Mac环境配置</title><link>https://a390177226.github.io/post/mac%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 09 Aug 2021 22:49:50 +0800</pubDate><guid>https://a390177226.github.io/post/mac%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid><description>ZZB's blog https://a390177226.github.io/post/mac%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/ -&lt;h1 id="1-安装homebrew">1. 安装homebrew&lt;/h1>
&lt;p>homebrew官网：https://brew.sh/&lt;/p>
&lt;h2 id="install-homebrew">Install Homebrew&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">/bin/bash -c &lt;span style="color:#cd5555">&amp;#34;&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span style="color:#8b008b;font-weight:bold">)&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加到环境变量">添加到环境变量&lt;/h2>
&lt;p>可以修复&lt;code>zsh command not found: brew?&lt;/code>问题，具体见：&lt;a href="https://stackoverflow.com/questions/65619529/fixing-zsh-command-not-found-brew-installing-homebrew">Fixing zsh command not found: brew?｜stackoverflow &lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#658b00">cd&lt;/span> /opt/homebrew/bin/
&lt;span style="color:#00688b">PATH&lt;/span>=&lt;span style="color:#00688b">$PATH&lt;/span>:/opt/homebrew/bin
&lt;span style="color:#658b00">cd&lt;/span>
touch .zshrc
&lt;span style="color:#658b00">echo&lt;/span> &lt;span style="color:#658b00">export&lt;/span> &lt;span style="color:#00688b">PATH&lt;/span>=&lt;span style="color:#00688b">$PATH&lt;/span>:/opt/homebrew/bin &amp;gt;&amp;gt; .zshrc
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="2-配置github">2. 配置github&lt;/h1>
&lt;p>&lt;a href="https://blog.csdn.net/smile0125/article/details/80885064">Mac 终端创建ssh key并添加到GitHub&lt;/a>&lt;/p>
&lt;h1 id="3">3.&lt;/h1>
- https://a390177226.github.io/post/mac%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/ - zzb2021.</description></item><item><title>Bootstrap 4</title><link>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/bootstrap4/</link><pubDate>Wed, 07 Jul 2021 12:32:07 +0800</pubDate><guid>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/bootstrap4/</guid><description>ZZB's blog https://a390177226.github.io/%E5%89%8D%E7%AB%AF/bootstrap4/ -&lt;h1 id="links">Links&lt;/h1>
&lt;p>官网&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://getbootstrap.com/">Bootstrap | Bootstrap 英文网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://v4.bootcss.com/">Bootstrap v4 | Bootstrap 中文网&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>教程&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.w3schools.com/bootstrap4/default.asp">Bootstrap 4 Tutorial (w3schools.com)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.twle.cn/l/yufei/bootstrap4/bootstrap-v4-index.html">Bootstrap 4 基础教程 | 简单教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="what-is-bootstrap">What is Bootstrap?&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>Bootstrap 是全球最受欢迎的前端框架，用于构建响应式、移动设备优先的网站&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Bootstrap 包括基于HTML和CSS的设计模板，用于排版、表单、按钮、表格、导航、modals、图像旋转木马和许多其他内容，以及可选的JavaScript插件&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="why-use-bootstrap">Why Use Bootstrap?&lt;/h1>
&lt;ul>
&lt;li>简单易用：只要对HTML和CSS有基本了解的人都可以开始使用Bootstrap&lt;/li>
&lt;li>响应特性：Bootstrap的响应CSS可以根据手机、平板电脑和台式机进行调整&lt;/li>
&lt;li>mobile-first原则：mobile-first样式是核心框架的一部分&lt;/li>
&lt;li>浏览器兼容性：bootstrap兼容所有现代浏览器&lt;/li>
&lt;/ul>
&lt;h1 id="how-to-use-bootstrap">How To Use Bootstrap?&lt;/h1>
&lt;ul>
&lt;li>Include Bootstrap 4 from a CDN&lt;/li>
&lt;li>Download Bootstrap 4 from getbootstrap.com&lt;/li>
&lt;/ul>
&lt;h1 id="简单示例">简单示例&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#1e889b">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">html&lt;/span> &lt;span style="color:#658b00">lang&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">title&lt;/span>&amp;gt;Bootstrap 4 Example&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">title&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">meta&lt;/span> &lt;span style="color:#658b00">charset&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;utf-8&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">meta&lt;/span> &lt;span style="color:#658b00">name&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span style="color:#658b00">content&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;width=device-width, initial-scale=1&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">link&lt;/span> &lt;span style="color:#658b00">rel&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#658b00">href&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span> &lt;span style="color:#658b00">src&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span> &lt;span style="color:#658b00">src&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span> &lt;span style="color:#658b00">src&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;container&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">h1&lt;/span>&amp;gt;My First Bootstrap Page&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">h1&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;This is some text.&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="containers">Containers&lt;/h1>
&lt;p>容器用于填充其中的内容，有两个可用的容器类：&lt;/p>
&lt;ul>
&lt;li>&lt;code>.container&lt;/code>：提供响应性固定宽度容器&lt;/li>
&lt;li>&lt;code>.container-fluid&lt;/code>：提供一个全宽容器，覆盖视口的整个宽度&lt;/li>
&lt;/ul>
&lt;h1 id="grids">Grids&lt;/h1>
&lt;p>Bootstrap的网格系统是用flexbox构建的，允许页面上最多12列，列将根据屏幕大小自动重新排列&lt;/p>
&lt;p>Bootstrap 4网格系统有五个类：&lt;/p>
&lt;ul>
&lt;li>&lt;code>.col-&lt;/code> 针对所有设备&lt;/li>
&lt;li>&lt;code>.col-sm-&lt;/code> 平板 - 屏幕宽度等于或大于 576px&lt;/li>
&lt;li>&lt;code>.col-md-&lt;/code> 桌面显示器 - 屏幕宽度等于或大于 768px)&lt;/li>
&lt;li>&lt;code>.col-lg-&lt;/code> 大桌面显示器 - 屏幕宽度等于或大于 992px)&lt;/li>
&lt;li>&lt;code>.col-xl-&lt;/code> 超大桌面显示器 - 屏幕宽度等于或大于 1200px)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#228b22">&amp;lt;!-- 自动控制列宽度，每个col的列宽度均为6 --&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;col&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;col&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&lt;span style="color:#228b22">&amp;lt;!-- 手动控制列宽度，每个col的列宽度分别为4、8 --&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;col-sm-4&amp;#34;&lt;/span>&amp;gt;.col-sm-4&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;col-sm-8&amp;#34;&lt;/span>&amp;gt;.col-sm-8&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>- https://a390177226.github.io/%E5%89%8D%E7%AB%AF/bootstrap4/ - zzb2021.</description></item><item><title>Sass</title><link>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/sass/</link><pubDate>Tue, 06 Jul 2021 15:14:37 +0800</pubDate><guid>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/sass/</guid><description>ZZB's blog https://a390177226.github.io/%E5%89%8D%E7%AB%AF/sass/ -&lt;h1 id="links">Links&lt;/h1>
&lt;p>官网（有教程和文档）&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.sass.hk/">Sass&amp;ndash;世界上最成熟、稳定和强大的CSS扩展语言 | Sass中文网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sass-lang.com/">Sass: Syntactically Awesome Style Sheets (sass-lang.com)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>教程&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.w3schools.com/sass/default.php">Sass Tutorial (w3schools.com)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="what-is-sass">What is Sass?&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>Sass是&lt;strong>S&lt;/strong>yntactically &lt;strong>A&lt;/strong>wesome &lt;strong>S&lt;/strong>tyle&lt;strong>s&lt;/strong>heet的缩写&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sass是CSS的扩展&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sass是一个CSS预处理器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sass与CSS的所有版本完全兼容&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sass减少了CSS的重复，因此节省了时间&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="why-use-sass">Why Use Sass?&lt;/h1>
&lt;ul>
&lt;li>样式表越来越大，越来越复杂，也越来越难维护，这是CSS预处理器可以提供帮助的地方&lt;/li>
&lt;li>Sass允许您使用CSS中不存在的特性，比如变量、嵌套规则、混合、导入、继承、内置函数等&lt;/li>
&lt;/ul>
&lt;h1 id="how-does-sass-work">How Does Sass Work?&lt;/h1>
&lt;ul>
&lt;li>由于浏览器不理解Sass代码，需要一个Sass预处理器来将Sass代码转换成标准CSS，这个过程称为transpiling&lt;/li>
&lt;li>Sass文件具有“.scss”文件扩展名&lt;/li>
&lt;/ul>
&lt;h1 id="安装sass">安装Sass&lt;/h1>
&lt;p>下面这个应用程序可以让你在几分钟内启动并运行Sass&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://scout-app.io/">Scout-App&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="简单示例">简单示例&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#228b22">// mystyle.scss
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
&lt;span style="color:#228b22">/* Define standard variables and values for website */&lt;/span>
&lt;span style="color:#00688b">$bgcolor&lt;/span>: &lt;span style="color:#00688b">lightblue&lt;/span>;
&lt;span style="color:#00688b">$textcolor&lt;/span>: &lt;span style="color:#00688b">darkblue&lt;/span>;
&lt;span style="color:#00688b">$fontsize&lt;/span>: &lt;span style="color:#b452cd">18&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;
&lt;span style="color:#228b22">/* Use the variables */&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span> {
&lt;span style="color:#658b00">background-color&lt;/span>: &lt;span style="color:#00688b">$bgcolor&lt;/span>;
&lt;span style="color:#658b00">color&lt;/span>: &lt;span style="color:#00688b">$textcolor&lt;/span>;
&lt;span style="color:#658b00">font-size&lt;/span>: &lt;span style="color:#00688b">$fontsize&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">// &lt;span style="color:#8b008b;font-weight:bold">mystyle&lt;/span>.&lt;span style="color:#008b45;font-weight:bold">css&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">background-color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">lightblue&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">darkblue&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">font-size&lt;/span>: &lt;span style="color:#b452cd">18&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;&lt;span style="color:#a61717;background-color:#e3d2d2">css&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">// mypage.html
&lt;span style="color:#1e889b">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">html&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">link&lt;/span> &lt;span style="color:#658b00">rel&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#658b00">href&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;mystyle.css&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">h1&lt;/span>&amp;gt;Hello World&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">h1&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;This is a paragraph.&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="sass-variables">Sass Variables&lt;/h1>
&lt;p>变量是一种存储信息的方法，方便以后可以重用。&lt;/p>
&lt;p>Sass声明变量语法：&lt;code>$variablename: value;&lt;/code>&lt;/p>
&lt;p>变量范围：Sass变量仅在定义它们的嵌套级别可用&lt;/p>
&lt;p>设置全局变量：&lt;code>!global&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#228b22">// mystyle.scss
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
&lt;span style="color:#00688b">$myColor&lt;/span>: &lt;span style="color:#00688b">red&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">h1&lt;/span> {
&lt;span style="color:#00688b">$myColor&lt;/span>: &lt;span style="color:#00688b">green&lt;/span>;
&lt;span style="color:#00688b">$globalColor&lt;/span>: &lt;span style="color:#00688b">green&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">!global&lt;/span>;
&lt;span style="color:#658b00">color&lt;/span>: &lt;span style="color:#00688b">$myColor&lt;/span>;
}
&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span> {
&lt;span style="color:#658b00">color&lt;/span>: &lt;span style="color:#00688b">$myColor&lt;/span>;
&lt;span style="color:#658b00">background-color&lt;/span>: &lt;span style="color:#00688b">$globalColor&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">// &lt;span style="color:#8b008b;font-weight:bold">mystyle&lt;/span>.&lt;span style="color:#008b45;font-weight:bold">css&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">h1&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">green&lt;/span>;
}
&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">red&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">background-color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">green&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="sass-nesting">Sass Nesting&lt;/h1>
&lt;p>Sass允许您以与HTML相同的方式嵌套CSS选择器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#228b22">// mystyle.scss
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">nav&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">ul&lt;/span> {
&lt;span style="color:#658b00">margin&lt;/span>: &lt;span style="color:#b452cd">0&lt;/span>;
&lt;span style="color:#658b00">padding&lt;/span>: &lt;span style="color:#b452cd">0&lt;/span>;
&lt;span style="color:#658b00">list-style&lt;/span>: none;
}
&lt;span style="color:#8b008b;font-weight:bold">li&lt;/span> {
&lt;span style="color:#658b00">display&lt;/span>: inline-block;
}
&lt;span style="color:#8b008b;font-weight:bold">a&lt;/span> {
&lt;span style="color:#658b00">display&lt;/span>: block;
&lt;span style="color:#658b00">padding&lt;/span>: &lt;span style="color:#b452cd">6&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span> &lt;span style="color:#b452cd">12&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;
&lt;span style="color:#658b00">text-decoration&lt;/span>: none;
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">// &lt;span style="color:#8b008b;font-weight:bold">mystyle&lt;/span>.&lt;span style="color:#008b45;font-weight:bold">css&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">nav&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">ul&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">margin&lt;/span>: &lt;span style="color:#b452cd">0&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">padding&lt;/span>: &lt;span style="color:#b452cd">0&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">list-style&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">none&lt;/span>;
}
&lt;span style="color:#8b008b;font-weight:bold">nav&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">li&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">display&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">inline-block&lt;/span>;
}
&lt;span style="color:#8b008b;font-weight:bold">nav&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">a&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">display&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">block&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">padding&lt;/span>: &lt;span style="color:#b452cd">6&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span> &lt;span style="color:#b452cd">12&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">text-decoration&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">none&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="sass-import-and-partials">Sass @import and Partials&lt;/h1>
&lt;p>与CSS一样，Sass也支持&lt;code>@import&lt;/code>指令，该指令允许将一个文件的内容包含在另一个文件中&lt;/p>
&lt;p>Sass导入语法：&lt;code>@import filename;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#8b008b;font-weight:bold">@import&lt;/span> &lt;span style="color:#cd5555">&amp;#34;variables&amp;#34;&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">@import&lt;/span> &lt;span style="color:#cd5555">&amp;#34;colors&amp;#34;&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">@import&lt;/span> &lt;span style="color:#cd5555">&amp;#34;reset&amp;#34;&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通常，有些&lt;code>sass&lt;/code>文件用于导入，并不希望为每个这样的文件单独地生成一个&lt;code>css&lt;/code>文件&lt;/p>
&lt;p>对此，&lt;code>sass&lt;/code>用一个特殊的约定来解决&lt;/p>
&lt;ul>
&lt;li>使用SASS Partials，文件名以下划线开头，例如：&lt;code>_base.scss&lt;/code>&lt;/li>
&lt;li>然后使用&lt;code>@import 'base';&lt;/code>&lt;/li>
&lt;li>&lt;code>sass&lt;/code>就不会在编译时单独编译这个文件输出&lt;code>css&lt;/code>，而只把这个文件用作导入&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#228b22">// _base.scss
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
&lt;span style="color:#00688b">$font-stack&lt;/span>: Helvetica, sans-serif;
&lt;span style="color:#00688b">$primary-color&lt;/span>: &lt;span style="color:#b452cd">#333&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span> {
&lt;span style="color:#658b00">font&lt;/span>: &lt;span style="color:#b452cd">100&lt;/span>&lt;span style="color:#00688b;font-weight:bold">%&lt;/span> &lt;span style="color:#00688b">$font-stack&lt;/span>;
&lt;span style="color:#658b00">color&lt;/span>: &lt;span style="color:#00688b">$primary-color&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#228b22">// styles.scss
&lt;/span>&lt;span style="color:#228b22">&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">@import&lt;/span> &lt;span style="color:#cd5555">&amp;#39;base&amp;#39;&lt;/span>;
&lt;span style="color:#008b45;font-weight:bold">.inverse&lt;/span> {
&lt;span style="color:#658b00">background-color&lt;/span>: &lt;span style="color:#00688b">$primary-color&lt;/span>;
&lt;span style="color:#658b00">color&lt;/span>: white;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">// &lt;span style="color:#8b008b;font-weight:bold">styles&lt;/span>.&lt;span style="color:#008b45;font-weight:bold">css&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">font&lt;/span>: &lt;span style="color:#b452cd">100&lt;/span>&lt;span style="color:#00688b;font-weight:bold">%&lt;/span> Helvetica, &lt;span style="color:#8b008b;font-weight:bold">sans-serif&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">color&lt;/span>: &lt;span style="color:#b452cd">#333&lt;/span>;
}
.&lt;span style="color:#008b45;font-weight:bold">inverse&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">background-color&lt;/span>: &lt;span style="color:#b452cd">#333&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">white&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="sass-mixin-and-include">Sass @mixin and @include&lt;/h1>
&lt;h2 id="定义和使用mixin">定义和使用mixin&lt;/h2>
&lt;p>&lt;code>@mixin&lt;/code>指令允许您创建在整个网站中重用的CSS代码，&lt;code>@include&lt;/code>指令是为了让您使用mixin&lt;/p>
&lt;p>定义一个mixin，然后使用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#8b008b;font-weight:bold">@mixin&lt;/span>&lt;span style="color:#008b45"> important-text&lt;/span> {
&lt;span style="color:#658b00">color&lt;/span>: &lt;span style="color:#00688b">red&lt;/span>;
&lt;span style="color:#658b00">font-size&lt;/span>: &lt;span style="color:#b452cd">25&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;
&lt;span style="color:#658b00">font-weight&lt;/span>: bold;
&lt;span style="color:#658b00">border&lt;/span>: &lt;span style="color:#b452cd">1&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span> solid &lt;span style="color:#00688b">blue&lt;/span>;
}
&lt;span style="color:#008b45;font-weight:bold">.danger&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">@include&lt;/span>&lt;span style="color:#707a7c"> important-text&lt;/span>;
&lt;span style="color:#658b00">background-color&lt;/span>: &lt;span style="color:#00688b">green&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sass transpiler将上述内容转换为普通CSS：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">.&lt;span style="color:#008b45;font-weight:bold">danger&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">red&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">font-size&lt;/span>: &lt;span style="color:#b452cd">25&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">font-weight&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">bold&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">border&lt;/span>: &lt;span style="color:#b452cd">1&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">solid&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">blue&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">background-color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">green&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="向mixin传递变量">向Mixin传递变量&lt;/h2>
&lt;p>mixin可以接受参数，这样就可以将变量传递给mixin&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#228b22">/* Define mixin with two arguments */&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">@mixin&lt;/span>&lt;span style="color:#008b45"> bordered&lt;/span>(&lt;span style="color:#00688b">$color&lt;/span>, &lt;span style="color:#00688b">$width&lt;/span>) {
&lt;span style="color:#658b00">border&lt;/span>: &lt;span style="color:#00688b">$width&lt;/span> solid &lt;span style="color:#00688b">$color&lt;/span>;
}
&lt;span style="color:#008b45;font-weight:bold">.myArticle&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">@include&lt;/span>&lt;span style="color:#707a7c"> bordered&lt;/span>(&lt;span style="color:#00688b">blue&lt;/span>, &lt;span style="color:#b452cd">1&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>); &lt;span style="color:#228b22">// Call mixin with two values
&lt;/span>&lt;span style="color:#228b22">&lt;/span>}
&lt;span style="color:#008b45;font-weight:bold">.myNotes&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">@include&lt;/span>&lt;span style="color:#707a7c"> bordered&lt;/span>(&lt;span style="color:#00688b">red&lt;/span>, &lt;span style="color:#b452cd">2&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>); &lt;span style="color:#228b22">// Call mixin with two values
&lt;/span>&lt;span style="color:#228b22">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mixin参数可以设置默认值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#8b008b;font-weight:bold">@mixin&lt;/span>&lt;span style="color:#008b45"> bordered&lt;/span>(&lt;span style="color:#00688b">$color&lt;/span>: &lt;span style="color:#00688b">blue&lt;/span>, &lt;span style="color:#00688b">$width&lt;/span>: &lt;span style="color:#b452cd">1&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>) {
&lt;span style="color:#658b00">border&lt;/span>: &lt;span style="color:#00688b">$width&lt;/span> solid &lt;span style="color:#00688b">$color&lt;/span>;
}
&lt;span style="color:#008b45;font-weight:bold">.myTips&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">@include&lt;/span>&lt;span style="color:#707a7c"> bordered&lt;/span>(&lt;span style="color:#00688b">$color&lt;/span>: &lt;span style="color:#00688b">orange&lt;/span>);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="sass-extend-and-inheritance">Sass @extend and Inheritance&lt;/h1>
&lt;p>&lt;code>@extend&lt;/code>指令允许您从一个选择器到另一个选择器共享一组CSS属性&lt;/p>
&lt;p>如果您的元素样式几乎相同，但只是在一些小细节上有所不同，&lt;code>@extend&lt;/code>指令非常有用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#008b45;font-weight:bold">.button-basic&lt;/span> {
&lt;span style="color:#658b00">border&lt;/span>: none;
&lt;span style="color:#658b00">padding&lt;/span>: &lt;span style="color:#b452cd">15&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span> &lt;span style="color:#b452cd">30&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;
&lt;span style="color:#658b00">text-align&lt;/span>: center;
&lt;span style="color:#658b00">font-size&lt;/span>: &lt;span style="color:#b452cd">16&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;
&lt;span style="color:#658b00">cursor&lt;/span>: pointer;
}
&lt;span style="color:#008b45;font-weight:bold">.button-report&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">@extend&lt;/span> &lt;span style="color:#008b45;font-weight:bold">.button-basic&lt;/span>;
&lt;span style="color:#658b00">background-color&lt;/span>: &lt;span style="color:#00688b">red&lt;/span>;
}
&lt;span style="color:#008b45;font-weight:bold">.button-submit&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">@extend&lt;/span> &lt;span style="color:#008b45;font-weight:bold">.button-basic&lt;/span>;
&lt;span style="color:#658b00">background-color&lt;/span>: &lt;span style="color:#00688b">green&lt;/span>;
&lt;span style="color:#658b00">color&lt;/span>: white;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译后，CSS将如下所示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">.&lt;span style="color:#008b45;font-weight:bold">button-basic&lt;/span>, .&lt;span style="color:#008b45;font-weight:bold">button-report&lt;/span>, .&lt;span style="color:#008b45;font-weight:bold">button-submit&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">border&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">none&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">padding&lt;/span>: &lt;span style="color:#b452cd">15&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span> &lt;span style="color:#b452cd">30&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">text-align&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">center&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">font-size&lt;/span>: &lt;span style="color:#b452cd">16&lt;/span>&lt;span style="color:#00688b;font-weight:bold">px&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">cursor&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">pointer&lt;/span>;
}
.&lt;span style="color:#008b45;font-weight:bold">button-report&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">background-color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">red&lt;/span>;
}
.&lt;span style="color:#008b45;font-weight:bold">button-submit&lt;/span> {
&lt;span style="color:#8b008b;font-weight:bold">background-color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">green&lt;/span>;
&lt;span style="color:#8b008b;font-weight:bold">color&lt;/span>: &lt;span style="color:#8b008b;font-weight:bold">white&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>- https://a390177226.github.io/%E5%89%8D%E7%AB%AF/sass/ - zzb2021.</description></item><item><title>[Dig Deeper]--jQuery</title><link>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-jquery/</link><pubDate>Thu, 01 Jul 2021 14:17:33 +0800</pubDate><guid>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-jquery/</guid><description>ZZB's blog https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-jquery/ -&lt;h1 id="links">Links&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.twle.cn/l/yufei/jquery/jquery-basic-index.html">jQuery 基础教程| 简单教程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-selectors.html">jQuery 参考手册| 简单教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="简介">简介&lt;/h1>
&lt;blockquote>
&lt;ul>
&lt;li>jQuery 是一个轻量级的 &amp;ldquo;写的少，做的多&amp;rdquo; 的 JavaScript 库&lt;/li>
&lt;li>jQuery 极大地简化了 JavaScript 编程，优化了DOM操作、事件处理、动画设计和Ajax交互&lt;/li>
&lt;li>jQuery 很容易学习，提高开发效率&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>优点：&lt;/p>
&lt;ul>
&lt;li>轻量级&lt;/li>
&lt;li>跨浏览器兼容&lt;/li>
&lt;li>免费、开源&lt;/li>
&lt;/ul>
&lt;h1 id="安装和使用">安装和使用&lt;/h1>
&lt;p>下载使用（推荐）&lt;/p>
&lt;ol>
&lt;li>从 &lt;a href="https://jquery.com/download/">jquery.com&lt;/a> 下载 jQuery 库&lt;/li>
&lt;li>在工作目录下保存为&lt;code>jquery-3.6.0.min.js&lt;/code>&lt;/li>
&lt;li>引用jQuery：&lt;code>&amp;lt;script src=&amp;quot;jquery-2.2.4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>不下载，通过CDN（Content Delivery Network）使用&lt;/p>
&lt;h1 id="简单的例子">简单的例子&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#1e889b">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">meta&lt;/span> &lt;span style="color:#658b00">charset&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;utf-8&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span> &lt;span style="color:#658b00">src&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;jquery-3.6.0.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;aaaaaa&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;$(&lt;span style="color:#cd5555">&amp;#39;p&amp;#39;&lt;/span>).hide()&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="jquery-语法">jQuery 语法&lt;/h1>
&lt;p>jQuery 通过选取 HTML 元素，并对选取的元素执行某些操作&lt;/p>
&lt;p>基础语法：&lt;code>$( selector ).action()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>美元符号&lt;code>$&lt;/code>是jQuery 的别名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>选择符（selector）&amp;ldquo;查询&amp;rdquo; 和 &amp;ldquo;查找&amp;rdquo; HTML 元素&lt;/p>
&lt;/li>
&lt;li>
&lt;p>jQuery 的 action() 执行对元素的操作&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="jquery-选择器">jQuery 选择器&lt;/h1>
&lt;p>jQuery 选择器可以对 HTML 元素组或单个元素进行操作&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>选择器&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>例子&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>元素选择器&lt;/td>
&lt;td>基于元素名选取元素&lt;/td>
&lt;td>选取所有 &lt;code>&amp;lt;p&amp;gt; &lt;/code>元素：&lt;code>$(&amp;quot;p&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>#id 选择器&lt;/td>
&lt;td>通过 HTML 元素的 id 属性选取指定的元素&lt;/td>
&lt;td>&lt;code>$(&amp;quot;#test&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>.class 选择器&lt;/td>
&lt;td>通过指定的 class 查找元素&lt;/td>
&lt;td>&lt;code>$(&amp;quot;.test&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>属性选择器&lt;/td>
&lt;td>选取带有 href 属性的元素&lt;/td>
&lt;td>&lt;code>$(&amp;quot;[href]&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>属性值选择器&lt;/td>
&lt;td>选取所有 target 属性值等于 &amp;ldquo;_blank&amp;rdquo; 的 &lt;code>&amp;lt;a&amp;gt;&lt;/code> 元素&lt;/td>
&lt;td>&lt;code>$(&amp;quot;a[target='_blank']&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="jquery-事件">jQuery 事件&lt;/h1>
&lt;p>jQuery 是为 HTML DOM 事件处理特别设计的&lt;/p>
&lt;h2 id="常见-html-dom-事件">常见 HTML DOM 事件&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>鼠标事件&lt;/th>
&lt;th>键盘事件&lt;/th>
&lt;th>表单事件&lt;/th>
&lt;th>文档/窗口事件&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-click.html">click&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-keypress.html">keypress&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-submit.html">submit&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-load.html">load&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-dblclick.html">dblclick&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-keydown.html">keydown&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-change.html">change&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-resize.html">resize&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-mouseenter.html">mouseenter&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-keyup.html">keyup&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-focus.html">focus&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-scroll.html">scroll&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-mouseleave.html">mouseleave&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-blur.html">blur&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.twle.cn/l/yufei/jqueryref/jquery-ref-event-unload.html">unload&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="jquery-事件方法语法">jQuery 事件方法语法&lt;/h2>
&lt;p>在 jQuery 中，大多数 DOM 事件都有一个等效的 jQuery 方法&lt;/p>
&lt;p>比如页面中指定一个点击事件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">$(&lt;span style="color:#cd5555">&amp;#34;p&amp;#34;&lt;/span>).click(&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span>(){
&lt;span style="color:#228b22">// 动作触发后执行的代码!!
&lt;/span>&lt;span style="color:#228b22">&lt;/span>});
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="jquery-效果和动画">jQuery 效果和动画&lt;/h1>
&lt;h2 id="隐藏和显示">隐藏和显示&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>方法&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>hide()&lt;/code>&lt;/td>
&lt;td>隐藏 HTML 元素&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>show()&lt;/code>&lt;/td>
&lt;td>显示 HTML 元素&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>toggle()&lt;/code>&lt;/td>
&lt;td>切换&lt;code>hide()&lt;/code>和&lt;code>show()&lt;/code>方法&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#1e889b">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">meta&lt;/span> &lt;span style="color:#658b00">charset&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;utf-8&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span> &lt;span style="color:#658b00">src&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;jquery-3.6.0.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;123456789&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span> &lt;span style="color:#658b00">id&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;toggle&amp;#34;&lt;/span>&amp;gt;toggle&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span> &lt;span style="color:#658b00">id&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;hide&amp;#34;&lt;/span>&amp;gt;hide&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span> &lt;span style="color:#658b00">id&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;show&amp;#34;&lt;/span>&amp;gt;show&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
$(&lt;span style="color:#cd5555">&amp;#34;#hide&amp;#34;&lt;/span>).click(&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> () {
$(&lt;span style="color:#cd5555">&amp;#34;p&amp;#34;&lt;/span>).hide();
});
$(&lt;span style="color:#cd5555">&amp;#34;#show&amp;#34;&lt;/span>).click(&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> () {
$(&lt;span style="color:#cd5555">&amp;#34;p&amp;#34;&lt;/span>).show();
});
$(&lt;span style="color:#cd5555">&amp;#34;#toggle&amp;#34;&lt;/span>).click(&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> () {
$(&lt;span style="color:#cd5555">&amp;#34;p&amp;#34;&lt;/span>).toggle();
});
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="淡入淡出">淡入淡出&lt;/h2>
&lt;p>jQuery 提供四种实现元素的淡入淡出效果的方法&lt;/p>
&lt;ul>
&lt;li>&lt;code>fadeIn()&lt;/code>：淡入已隐藏的元素&lt;/li>
&lt;li>&lt;code>fadeOut()&lt;/code>：淡出可见元素&lt;/li>
&lt;li>&lt;code>fadeToggle()&lt;/code>：在 &lt;code>fadeIn()&lt;/code> 与 &lt;code>fadeOut()&lt;/code>方法之间进行切换&lt;/li>
&lt;li>&lt;code>fadeTo()&lt;/code>：渐变为给定的不透明度 ( 值介于 0 与 1 之间 )&lt;/li>
&lt;/ul>
&lt;h2 id="滑动">滑动&lt;/h2>
&lt;p>jQuery 提供了三个方法来创建元素的滑动效果&lt;/p>
&lt;ul>
&lt;li>&lt;code>slideDown()&lt;/code>：向下滑动元素&lt;/li>
&lt;li>&lt;code>slideUp()&lt;/code>：向上滑动元素&lt;/li>
&lt;li>&lt;code>slideToggle()&lt;/code>：在 &lt;code>slideDown()&lt;/code> 与 &lt;code>slideUp()&lt;/code> 方法之间进行切换&lt;/li>
&lt;/ul>
&lt;h2 id="动画和停止动画">动画和停止动画&lt;/h2>
&lt;p>jQuery 中的&lt;code>animate()&lt;/code> 函数可以创建自定义动画&lt;/p>
&lt;p>jQuery 中的&lt;code>stop() &lt;/code>方法用于停止动画或效果，包括滑动、淡入淡出和自定义动画&lt;/p>
&lt;h1 id="jquery-方法链--chaining-">jQuery 方法链 ( chaining )&lt;/h1>
&lt;p>jQuery 还提供了一种一种名为链接（chaining）的技术，允许我们在相同的元素上运行多条 jQuery 命令，这样做的好处就是省去了多次查找相同的元素&lt;/p>
&lt;p>下面的范例把 css()、slideUp() 和 slideDown() 链接在一起，&amp;ldquo;p1&amp;rdquo; 元素首先会变为红色，然后向上滑动，再然后向下滑动&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#1e889b">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">meta&lt;/span> &lt;span style="color:#658b00">charset&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;utf-8&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span> &lt;span style="color:#658b00">src&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;jquery-3.6.0.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span> &lt;span style="color:#658b00">id&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;p1&amp;#34;&lt;/span>&amp;gt;zzb&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span>&amp;gt;点我&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
$(&lt;span style="color:#cd5555">&amp;#34;button&amp;#34;&lt;/span>).click(&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> () {
$(&lt;span style="color:#cd5555">&amp;#34;#p1&amp;#34;&lt;/span>).css(&lt;span style="color:#cd5555">&amp;#34;color&amp;#34;&lt;/span>, &lt;span style="color:#cd5555">&amp;#34;red&amp;#34;&lt;/span>).slideUp(&lt;span style="color:#b452cd">2000&lt;/span>).slideDown(&lt;span style="color:#b452cd">2000&lt;/span>);
});
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="jquery-dom-操作">jQuery DOM 操作&lt;/h1>
&lt;p>jQuery 中非常重要的部分，就是操作 DOM 的能力。&lt;/p>
&lt;p>jQuery 提供一系列与 DOM 相关的方法，这使访问和操作元素和属性变得很容易。&lt;/p>
&lt;h2 id="获取内容和属性">获取内容和属性&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>方法&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>例子&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>text()&lt;/code>&lt;/td>
&lt;td>获取所选元素的文本内容&lt;/td>
&lt;td>&lt;code>$(&amp;quot;#test&amp;quot;).text()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>html()&lt;/code>&lt;/td>
&lt;td>获取所选元素的内容（包括 HTML 标记）&lt;/td>
&lt;td>&lt;code>$(&amp;quot;#test&amp;quot;).html()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>val()&lt;/code>&lt;/td>
&lt;td>获取表单字段的值&lt;/td>
&lt;td>&lt;code>$(&amp;quot;#test&amp;quot;).val()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>attr()&lt;/code>&lt;/td>
&lt;td>获取属性值&lt;/td>
&lt;td>&lt;code>$(&amp;quot;#twle&amp;quot;).attr(&amp;quot;href&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="设置内容和属性">设置内容和属性&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>方法&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>例子&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>text()&lt;/code>&lt;/td>
&lt;td>设置所选元素的文本内容&lt;/td>
&lt;td>&lt;code>$(&amp;quot;#test1&amp;quot;).text(&amp;quot;Hello world!&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>html()&lt;/code>&lt;/td>
&lt;td>设置所选元素的内容（包括 HTML 标记）&lt;/td>
&lt;td>&lt;code>$(&amp;quot;#test2&amp;quot;).html(&amp;quot;&amp;lt;b&amp;gt;Hello world!&amp;lt;/b&amp;gt;&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>val()&lt;/code>&lt;/td>
&lt;td>设置表单字段的值&lt;/td>
&lt;td>&lt;code>$(&amp;quot;#test3&amp;quot;).val(&amp;quot;TWLE&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>attr()&lt;/code>&lt;/td>
&lt;td>设置属性值&lt;/td>
&lt;td>&lt;code>$(&amp;quot;#twle&amp;quot;).attr(&amp;quot;href&amp;quot;,&amp;quot;http://www.twle.cn/jquery&amp;quot;)&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="添加元素">添加元素&lt;/h2>
&lt;p>jQuery 提供了四个简单使用的方法用于添加新内容或元素&lt;/p>
&lt;ol>
&lt;li>&lt;code>append()&lt;/code> - 在被选元素内部结尾插入内容&lt;/li>
&lt;li>&lt;code>prepend()&lt;/code> - 在被选元素内部开头插入内容&lt;/li>
&lt;li>&lt;code>after()&lt;/code> - 在被选元素外部之后插入内容&lt;/li>
&lt;li>&lt;code>before()&lt;/code> - 在被选元素外部之前插入内容&lt;/li>
&lt;/ol>
&lt;h2 id="删除元素">删除元素&lt;/h2>
&lt;p>如果想要删除元素和内容，可以使用下面的 jQuery 方法&lt;/p>
&lt;ol>
&lt;li>&lt;code>remove()&lt;/code> - 删除被选元素及其子元素&lt;/li>
&lt;li>&lt;code>empty()&lt;/code> - 从被选元素中删除子元素&lt;/li>
&lt;/ol>
&lt;h2 id="获取并设置-css-类">获取并设置 CSS 类&lt;/h2>
&lt;p>jQuery 拥有若干进行 CSS 操作的方法&lt;/p>
&lt;ol>
&lt;li>&lt;code>addClass()&lt;/code> - 向被选元素添加一个或多个类&lt;/li>
&lt;li>&lt;code>removeClass()&lt;/code> - 从被选元素删除一个或多个类&lt;/li>
&lt;li>&lt;code>toggleClass()&lt;/code> - 对被选元素进行添加/删除类的切换操作&lt;/li>
&lt;li>&lt;code>css()&lt;/code> - 设置或返回样式属性&lt;/li>
&lt;/ol>
&lt;h2 id="jquery-尺寸">jQuery 尺寸&lt;/h2>
&lt;p>jQuery 提供了六个方法用来设置或返回元素和浏览器窗口的尺寸&lt;/p>
&lt;ol>
&lt;li>&lt;code>width()&lt;/code>&lt;/li>
&lt;li>&lt;code>height()&lt;/code>&lt;/li>
&lt;li>&lt;code>innerWidth()&lt;/code>&lt;/li>
&lt;li>&lt;code>innerHeight()&lt;/code>&lt;/li>
&lt;li>&lt;code>outerWidth()&lt;/code>&lt;/li>
&lt;li>&lt;code>outerHeight()&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://a390177226.github.io/images/html/img_jquerydim.gif" alt="jQuery Dimensions">&lt;/p>
&lt;h1 id="jquery-遍历">jQuery 遍历&lt;/h1>
&lt;h2 id="向上遍历-dom-树">向上遍历 DOM 树&lt;/h2>
&lt;p>jQuery 提供了下面三个方法用于向上遍历 DOM 树&lt;/p>
&lt;ol>
&lt;li>&lt;code>parent()&lt;/code>&lt;/li>
&lt;li>&lt;code>parents()&lt;/code>&lt;/li>
&lt;li>&lt;code>parentsUntil()&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="向下遍历-dom-树">向下遍历 DOM 树&lt;/h2>
&lt;p>jQuery 提供了下面两个用于向下遍历 DOM 树&lt;/p>
&lt;ol>
&lt;li>&lt;code>children()&lt;/code> - 返回被选元素的所有直接子元素&lt;/li>
&lt;li>&lt;code>find()&lt;/code> - 返回被选元素的后代元素，一路向下直到最后一个后代&lt;/li>
&lt;/ol>
&lt;h1 id="jquery-ajax">jQuery AJAX&lt;/h1>
&lt;p>jQuery 提供多个与 AJAX 有关的方法&lt;/p>
&lt;p>通过 jQuery AJAX 方法，可以使用 HTTP Get 和 HTTP Post 从远程服务器上请求文本、HTML、XML 或 JSON，而且还可以把这些外部数据直接载入网页的被选元素中&lt;/p>
&lt;blockquote>
&lt;p>jQuery 解放了 AjAx&lt;/p>
&lt;ul>
&lt;li>编写常规的 AJAX 代码并不容易，因为不同的浏览器对 AJAX 的实现并不相同，这意味着您必须编写额外的代码对浏览器进行测试&lt;/li>
&lt;li>jQuery 团队为我们解决了这个难题，我们只需要一行简单的代码，就可以实现 AJAX 功能&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="load-方法">&lt;code>load()&lt;/code> 方法&lt;/h2>
&lt;p>jQuery &lt;code>load()&lt;/code> 方法可以从服务器加载数据，并把返回的数据放入被选元素中&lt;/p>
&lt;p>基本语法：&lt;code>$(selector).load(URL,data,callback);&lt;/code>&lt;/p>
&lt;ul>
&lt;li>必需的 URL 参数设置了希望加载的 URL&lt;/li>
&lt;li>可选的 data 参数规定与请求一同发送的查询字符串键/值对集合&lt;/li>
&lt;li>可选的 callback 参数是 load() 方法完成后所执行的回调函数&lt;/li>
&lt;/ul>
&lt;p>假设服务器上有一个文件 &lt;code>test.txt&lt;/code>，内容如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">&amp;lt;h4&amp;gt;jQuery AJAX 是个非常棒的功能&amp;lt;/h4&amp;gt;
&amp;lt;p&amp;gt;这是段落的一些文本&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;简单教程，简单编程&amp;lt;/p&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面的范例会把文件 &amp;ldquo;test.txt&amp;rdquo; 的内容加载到指定的 &lt;code>&amp;lt;div&amp;gt;&lt;/code> 元素中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#1e889b">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">meta&lt;/span> &lt;span style="color:#658b00">charset&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;utf-8&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span> &lt;span style="color:#658b00">src&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;jquery-3.6.0.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">id&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;div1&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">h2&lt;/span>&amp;gt;使用 jQuery AJAX 修改文本内容&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">h2&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span>&amp;gt;获取外部内容&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
$(&lt;span style="color:#cd5555">&amp;#34;button&amp;#34;&lt;/span>).click(&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> () {
$(&lt;span style="color:#cd5555">&amp;#34;#div1&amp;#34;&lt;/span>).load(&lt;span style="color:#cd5555">&amp;#34;./test.txt&amp;#34;&lt;/span>);
});
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="get-和-post-方法">&lt;code>get()&lt;/code> 和 &lt;code>post()&lt;/code> 方法&lt;/h2>
&lt;p>jQuery &lt;code>get()&lt;/code> 和 &lt;code>post()&lt;/code> 方法用于通过 HTTP GET 或 POST 请求从服务器请求数据&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>$.get(URL,callback)&lt;/code>&lt;/p>
&lt;ul>
&lt;li>必需的 URL 参数用于设置希望请求的 URL&lt;/li>
&lt;li>可选的 callback 参数是请求成功后所执行的回调函数&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>$.post( URL,data,callback )&lt;/code>&lt;/p>
&lt;ul>
&lt;li>可选的 data 参数规定连同请求发送的数据&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="jquery-noconflict方法">jQuery &lt;code>noConflict()&lt;/code>方法&lt;/h1>
&lt;p>&lt;code>noConflict()&lt;/code> 用于处理和其它 JavaScript 框架 $ 符号冲突的情况&lt;/p>
&lt;p>&lt;code>noConflict()&lt;/code> 方法会释放对 $ 标识符的控制，这样其它脚本就可以使用它了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#228b22">// 创建自己的简写
&lt;/span>&lt;span style="color:#228b22">&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">var&lt;/span> jq = $.noConflict();
jq(&lt;span style="color:#658b00">document&lt;/span>).ready(&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span>(){
jq(&lt;span style="color:#cd5555">&amp;#34;button&amp;#34;&lt;/span>).click(&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span>(){
jq(&lt;span style="color:#cd5555">&amp;#34;p&amp;#34;&lt;/span>).text(&lt;span style="color:#cd5555">&amp;#34;jQuery 仍然在工作!&amp;#34;&lt;/span>);
});
});
&lt;/code>&lt;/pre>&lt;/div>- https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-jquery/ - zzb2021.</description></item><item><title>[Dig Deeper]--AJAX</title><link>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-ajax/</link><pubDate>Fri, 25 Jun 2021 12:49:07 +0800</pubDate><guid>https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-ajax/</guid><description>ZZB's blog https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-ajax/ -&lt;h1 id="简介">简介&lt;/h1>
&lt;blockquote>
&lt;ul>
&lt;li>AJAX = &lt;strong>A&lt;/strong>synchronous &lt;strong>J&lt;/strong>avaScript &lt;strong>A&lt;/strong>nd &lt;strong>X&lt;/strong>ML（异步的JavaScript和XML）&lt;/li>
&lt;li>AJAX 是一种无需重新加载整个网页的情况下，能够更新部分网页的技术&lt;/li>
&lt;li>AJAX 不是一种编程语言，而是一种用于创建更好更快以及交互性更强的Web应用程序的技术&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>传统网页（即不用ajax技术的网页），想要更新内容或者提交一个表单，都需要重新加载整个网页&lt;/p>
&lt;p>使用ajax技术的网页，通过在后台服务器进行少量的数据交换，就可以实现异步局部更新&lt;/p>
&lt;p>利用ajax可以做：&lt;/p>
&lt;ul>
&lt;li>注册时，输入用户名自动检测用户是否已经存在&lt;/li>
&lt;li>登陆时，提示用户名密码错误&lt;/li>
&lt;/ul>
&lt;h1 id="简单的例子">简单的例子&lt;/h1>
&lt;p>HTML页面：test.html&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#1e889b">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">html&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">id&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;demo&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">h2&lt;/span>&amp;gt;The XMLHttpRequest Object&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">h2&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span> &lt;span style="color:#658b00">type&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;button&amp;#34;&lt;/span> &lt;span style="color:#658b00">onclick&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;loadDoc()&amp;#34;&lt;/span>&amp;gt;Change Content&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">button&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> loadDoc() {
&lt;span style="color:#8b008b;font-weight:bold">const&lt;/span> xhttp = &lt;span style="color:#8b008b;font-weight:bold">new&lt;/span> XMLHttpRequest();
xhttp.onload = &lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> () {
&lt;span style="color:#658b00">document&lt;/span>.getElementById(&lt;span style="color:#cd5555">&amp;#34;demo&amp;#34;&lt;/span>).innerHTML = &lt;span style="color:#8b008b;font-weight:bold">this&lt;/span>.responseText;
}
xhttp.open(&lt;span style="color:#cd5555">&amp;#34;GET&amp;#34;&lt;/span>, &lt;span style="color:#cd5555">&amp;#34;ajax_info.txt&amp;#34;&lt;/span>, &lt;span style="color:#8b008b;font-weight:bold">true&lt;/span>);
xhttp.send();
}
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">script&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>文本：ajax_info.txt，在test.html同一级目录下&lt;/p>
&lt;h1 id="ajax-如何工作">AJAX 如何工作&lt;/h1>
&lt;p>&lt;img src="https://a390177226.github.io/images/html/ajax.gif" alt="AJAX">&lt;/p>
&lt;ol>
&lt;li>网页中发生一个事件（页面加载、按钮点击）&lt;/li>
&lt;li>由 JavaScript 创建 XMLHttpRequest 对象&lt;/li>
&lt;li>XMLHttpRequest 对象向 web 服务器发送请求&lt;/li>
&lt;li>服务器处理该请求&lt;/li>
&lt;li>服务器将响应发送回网页&lt;/li>
&lt;li>由 JavaScript 读取响应&lt;/li>
&lt;li>由 JavaScript 执行正确的动作（比如更新页面）&lt;/li>
&lt;/ol>
&lt;h1 id="xhr对象">XHR对象&lt;/h1>
&lt;p>所有现代浏览器都支持 XMLHttpRequest（XHR） 对象。&lt;/p>
&lt;blockquote>
&lt;p>Ajax 的核心是XHR对象&lt;/p>
&lt;ol>
&lt;li>创建XMLHttpRequest对象&lt;/li>
&lt;li>定义回调函数&lt;/li>
&lt;li>打开XMLHttpRequest对象&lt;/li>
&lt;li>向服务器发送请求&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;blockquote>
&lt;p>跨域访问&lt;/p>
&lt;p>出于安全原因，现代浏览器不允许跨域访问。这意味着尝试加载的网页和XML文件都必须位于相同服务器上。&lt;/p>
&lt;/blockquote>
&lt;h2 id="创建xhr对象">创建XHR对象&lt;/h2>
&lt;p>所有现代浏览器均内建 XMLHttpRequest 对象，创建一个XHR对象：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">xhttp = &lt;span style="color:#8b008b;font-weight:bold">new&lt;/span> XMLHttpRequest();
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="定义回调函数">定义回调函数&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">xhttp.onload = &lt;span style="color:#8b008b;font-weight:bold">function&lt;/span>() {
&lt;span style="color:#228b22">// What do do when the response is ready
&lt;/span>&lt;span style="color:#228b22">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="向服务器发送请求">向服务器发送请求&lt;/h2>
&lt;p>要向服务器发送请求，可以使用XHR对象的&lt;code>open()&lt;/code>和&lt;code>send()&lt;/code>方法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">xhttp.open(&lt;span style="color:#cd5555">&amp;#34;GET&amp;#34;&lt;/span>, &lt;span style="color:#cd5555">&amp;#34;ajax_info.txt&amp;#34;&lt;/span>);
xhttp.send();
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;code>open(method, url, async)&lt;/code>规定请求的类型&lt;/p>
&lt;ul>
&lt;li>method：请求的类型，GET 还是 POST&lt;/li>
&lt;li>url：服务器（文件）位置&lt;/li>
&lt;li>async：true（异步）或 false（同步）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>send()&lt;/code>向服务器发送请求（用于 GET）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="xhr对象属性">XHR对象属性&lt;/h2>
&lt;ul>
&lt;li>&lt;code>onreadystatechange&lt;/code>：定义当&lt;code>readyState&lt;/code>属性发生变化时被调用的函数&lt;/li>
&lt;li>&lt;code>readyState&lt;/code>：保存XHR的状态
&lt;ul>
&lt;li>0：请求未初始化&lt;/li>
&lt;li>1：服务器连接已建立&lt;/li>
&lt;li>2：请求已收到&lt;/li>
&lt;li>3：正在处理请求&lt;/li>
&lt;li>4：请求已完成且响应已就绪&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>服务器响应属性
&lt;ul>
&lt;li>&lt;code>responseText&lt;/code>：获得字符串形式的响应数据&lt;/li>
&lt;li>&lt;code>responseXML&lt;/code>：获得XML形式的响应数据&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>status&lt;/code>：返回请求的状态号
&lt;ul>
&lt;li>200: &amp;ldquo;OK&amp;rdquo;&lt;/li>
&lt;li>403: &amp;ldquo;Forbidden&amp;rdquo;&lt;/li>
&lt;li>404: &amp;ldquo;Not Found&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>statusText&lt;/code>：返回状态文本（比如 &amp;ldquo;OK&amp;rdquo; 或 &amp;ldquo;Not Found&amp;rdquo;）&lt;/li>
&lt;/ul>
&lt;h1 id="ajax高级">AJAX高级&lt;/h1>
&lt;p>AJAX 用于创造动态性更强的应用程序&lt;/p>
&lt;ul>
&lt;li>ASP/PHP&lt;/li>
&lt;li>数据库&lt;/li>
&lt;li>XML&lt;/li>
&lt;/ul>
- https://a390177226.github.io/%E5%89%8D%E7%AB%AF/dig-deeper-ajax/ - zzb2021.</description></item><item><title>python爬虫[5]--Scrapy框架</title><link>https://a390177226.github.io/python/scrapy/</link><pubDate>Thu, 24 Jun 2021 16:12:14 +0800</pubDate><guid>https://a390177226.github.io/python/scrapy/</guid><description>ZZB's blog https://a390177226.github.io/python/scrapy/ -&lt;h1 id="简介">简介&lt;/h1>
&lt;p>Scrapy是一个专门用于异步爬虫的框架&lt;/p>
&lt;p>功能：高性能的数据解析、请求发送，持久化存储，全站数据爬取，中间件，分布式&lt;/p>
&lt;p>安装：&lt;code>pip install scrapy&lt;/code>&lt;/p>
- https://a390177226.github.io/python/scrapy/ - zzb2021.</description></item><item><title>python爬虫[4]--cookie+代理操作+验证码识别+模拟登录</title><link>https://a390177226.github.io/python/cookie/</link><pubDate>Thu, 24 Jun 2021 13:09:39 +0800</pubDate><guid>https://a390177226.github.io/python/cookie/</guid><description>ZZB's blog https://a390177226.github.io/python/cookie/ -&lt;h1 id="主题">主题&lt;/h1>
&lt;ul>
&lt;li>cookie&lt;/li>
&lt;li>代理机制&lt;/li>
&lt;li>验证码识别&lt;/li>
&lt;li>模拟登录&lt;/li>
&lt;/ul>
&lt;h1 id="cookie">cookie&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>cookie是存储在客户端的一组键值对&lt;/p>
&lt;p>web中cookie的典型应用：免密登录&lt;/p>
&lt;p>cookie和爬虫之间的关联&lt;/p>
&lt;ul>
&lt;li>有时，对一张页面进行请求的时候，如果请求的过程不携带cookie的话，则无法请求到正确的页面数据&lt;/li>
&lt;li>因此，cookie是爬虫中一个非常典型且常见的反爬机制&lt;/li>
&lt;/ul>
&lt;h2 id="案例">案例&lt;/h2>
&lt;p>需求：爬取雪球网中的咨询信息&lt;/p>
&lt;ul>
&lt;li>url：&lt;a href="https://xueqiu.com/">https://xueqiu.com/&lt;/a>&lt;/li>
&lt;li>分析
&lt;ul>
&lt;li>判定爬取的咨询数据是否为动态加载的
&lt;ul>
&lt;li>相关的更多咨询数据是动态加载的，滚轮滑动到底部的时候会动态加载出更多咨询数据&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>定位到ajax请求的数据包，提取出请求的url，响应数据为json形式的咨询数据&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 失败案例&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">requests&lt;/span>
headers = {
&lt;span style="color:#cd5555">&amp;#39;user-agent&amp;#39;&lt;/span>:&lt;span style="color:#cd5555">&amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36 Edg/91.0.864.48&amp;#39;&lt;/span>
}
url = &lt;span style="color:#cd5555">&amp;#39;https://xueqiu.com/statuses/hot/listV2.json?since_id=-1&amp;amp;max_id=219925&amp;amp;size=15&amp;#39;&lt;/span>
page_text= requests.get(url=url, headers=headers).json()
&lt;/code>&lt;/pre>&lt;/div>&lt;p>问题：我们没有请求到想要的数据&lt;/p>
&lt;p>原因：没有严格意义上模拟浏览器发请求&lt;/p>
&lt;p>处理：可以将浏览器发请求携带的请求头，全部粘贴在headers字典中，将headers作用到requests的请求操作中即可，优先考虑cookie&lt;/p>
&lt;p>cookie的处理方式：&lt;/p>
&lt;ul>
&lt;li>方式1：手动处理
&lt;ul>
&lt;li>将抓包工具中的cookie粘贴在headers中&lt;/li>
&lt;li>弊端：cookie如果过了有效时长则该方式失效&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>方式2：自动处理
&lt;ul>
&lt;li>基于Session对象实现自动处理&lt;/li>
&lt;li>如何获取一个Session对象：&lt;code>requests.Session()&lt;/code>&lt;/li>
&lt;li>Session对象的作用
&lt;ul>
&lt;li>该对象可以向requests一样调用get和post发起指定的请求&lt;/li>
&lt;li>如果在使用session发请求的过程中产生了cookie，则cookie会被自动存储到该Session对象中&lt;/li>
&lt;li>那么就意味着下次再次使用Session对象发起请求，则该次请求就是携带cookie进行的请求发送&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在爬虫中使用session的时候，Session对象至少会被使用几次？
&lt;ul>
&lt;li>两次&lt;/li>
&lt;li>第一次，是为了将cookie捕获且存储到Session对象中&lt;/li>
&lt;li>第二次，就是携带cookie进行的请求发送&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 创建Session对象&lt;/span>
session = requests.Session()
&lt;span style="color:#228b22"># 第1次使用Session&lt;/span>
&lt;span style="color:#228b22"># 猜测对雪球网的首页发起的请求可能会产生cookie&lt;/span>
main_url = &lt;span style="color:#cd5555">&amp;#39;https://xueqiu.com/&amp;#39;&lt;/span>
&lt;span style="color:#228b22"># 捕获且存储cookie&lt;/span>
session.get(url=main_url,headers=headers)
url = &lt;span style="color:#cd5555">&amp;#39;https://xueqiu.com/statuses/hot/listV2.json?since_id=-1&amp;amp;max_id=219925&amp;amp;size=15&amp;#39;&lt;/span>
&lt;span style="color:#228b22"># 第2次使用Session,携带cookie发起的请求&lt;/span>
page_text= session.get(url=url, headers=headers).json()
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="代理操作">代理操作&lt;/h1>
&lt;h2 id="简介-1">简介&lt;/h2>
&lt;p>在爬虫中，代理指的是代理服务器&lt;/p>
&lt;p>代理服务器的作用：用来转发请求和响应&lt;/p>
&lt;p>在爬虫中为什么需要使用代理服务器？&lt;/p>
&lt;ul>
&lt;li>如果我们的爬虫在短时间内对服务器发起了高频的请求，那么服务器会检测到这样的一个异常的行为请求，就会将请求对应设备的ip禁掉，就意味着客户端设备无法对服务器端再次进行请求发送（ip被禁掉了）&lt;/li>
&lt;li>如果ip被禁，可以使用代理服务器进行请求转发，破解ip被禁的反爬机制&lt;/li>
&lt;/ul>
&lt;p>代理服务器分为不同的匿名度&lt;/p>
&lt;ul>
&lt;li>透明代理：服务器端知道你使用了代理服务器，也知道你的真实ip&lt;/li>
&lt;li>匿名代理：知道你使用了代理，但是不知道真实ip&lt;/li>
&lt;li>高匿代理：不知道你使用了代理，但是不知道真实ip&lt;/li>
&lt;/ul>
&lt;p>代理的类型&lt;/p>
&lt;ul>
&lt;li>https：代理只能转发https协议的请求&lt;/li>
&lt;li>http：转发http协议的请求&lt;/li>
&lt;/ul>
&lt;p>代理服务器&lt;/p>
&lt;ul>
&lt;li>快代理&lt;/li>
&lt;li>西祠代理&lt;/li>
&lt;li>&lt;a href="http://http.zhiliandaili.com/">代理精灵&lt;/a>（推荐）&lt;/li>
&lt;/ul>
&lt;h2 id="案例-1">案例&lt;/h2>
&lt;p>封装一个代理池&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">lxml&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> etree
url = &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>
page_text = requests.get(url=url,headers=headers).text
tree = etree.HTML(page_text)
proxy_list = tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//body//text()&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 代理池&lt;/span>
http_proxy = []
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> proxy &lt;span style="color:#8b008b">in&lt;/span> proxy_list:
dic = {
&lt;span style="color:#cd5555">&amp;#39;https&amp;#39;&lt;/span>:proxy
}
http_proxy.append(dic)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>对西祠代理发起一个高频的请求，让其将我本机ip禁掉&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># url模板&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://www.xicidaili.com/nn/&lt;/span>&lt;span style="color:#cd5555">{}&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span>
ips = []
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> page &lt;span style="color:#8b008b">in&lt;/span> &lt;span style="color:#658b00">range&lt;/span>(&lt;span style="color:#b452cd">1&lt;/span>,&lt;span style="color:#b452cd">11&lt;/span>):
new_url = url.format(page)
page_text = requests.get(url=new_url,headers=headers).text
tree = etree.HTML(page_text)
&lt;span style="color:#228b22"># 在xpath表达式中不可以出现tbody标签&lt;/span>
tr_list = tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//*[@id=&amp;#34;ip_list&amp;#34;]//tr&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">1&lt;/span>:]
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> tr &lt;span style="color:#8b008b">in&lt;/span> tr_list:
ip = tr.xpath(&lt;span style="color:#cd5555">&amp;#39;./td[2]/text()&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]
ips.append(ip)
&lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#658b00">len&lt;/span>(ips))
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用代理机制破解ip被封的效果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># url模板&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://www.xicidaili.com/nn/&lt;/span>&lt;span style="color:#cd5555">{}&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span>
ips = []
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> page &lt;span style="color:#8b008b">in&lt;/span> &lt;span style="color:#658b00">range&lt;/span>(&lt;span style="color:#b452cd">1&lt;/span>,&lt;span style="color:#b452cd">11&lt;/span>):
new_url = url.format(page)
&lt;span style="color:#228b22"># 让当此的请求使用代理机制，就可以更换请求的ip地址&lt;/span>
page_text = requests.get(url=new_url,headers=headers,proxies=random.choice(http_proxy)).text
tree = etree.HTML(page_text)
&lt;span style="color:#228b22"># 在xpath表达式中不可以出现tbody标签&lt;/span>
tr_list = tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//*[@id=&amp;#34;ip_list&amp;#34;]//tr&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">1&lt;/span>:]
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> tr &lt;span style="color:#8b008b">in&lt;/span> tr_list:
ip = tr.xpath(&lt;span style="color:#cd5555">&amp;#39;./td[2]/text()&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]
ips.append(ip)
&lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#658b00">len&lt;/span>(ips))
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="验证码识别">验证码识别&lt;/h1>
&lt;p>基于线上的打码平台识别验证码&lt;/p>
&lt;p>打码平台&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.chaojiying.com/">超级鹰&lt;/a>（使用）
&lt;ul>
&lt;li>注册（用户中心的身份）&lt;/li>
&lt;li>登录
&lt;ul>
&lt;li>查询余额&lt;/li>
&lt;li>创建一个软件ID&lt;/li>
&lt;li>下载示例代码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>云打码&lt;/li>
&lt;li>打码兔&lt;/li>
&lt;/ul>
&lt;h1 id="模拟登录">模拟登录&lt;/h1>
&lt;h2 id="流程">流程&lt;/h2>
&lt;ul>
&lt;li>对点击登录按钮对应的请求进行发送（post请求）&lt;/li>
&lt;li>处理请求参数
&lt;ul>
&lt;li>用户名&lt;/li>
&lt;li>密码&lt;/li>
&lt;li>验证码&lt;/li>
&lt;li>其他的防伪参数&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="基于ai的爬虫">基于AI的爬虫&lt;/h1>
&lt;p>百度AI&lt;/p>
&lt;h1 id="异步爬虫">异步爬虫&lt;/h1>
&lt;p>应付面试，实际不常用&lt;/p>
&lt;h1 id="selenium">selenium&lt;/h1>
&lt;p>概念：基于浏览器自动化的模块&lt;/p>
&lt;p>自动化：可以通过代码指定一系列的行为动作，然后将其作用到浏览器中&lt;/p>
&lt;p>安装：&lt;code>pip install selenium&lt;/code>&lt;/p>
&lt;p>selenium和爬虫之间的关联&lt;/p>
&lt;ul>
&lt;li>便捷的捕获到任意形式动态加载的数据&lt;/li>
&lt;li>实现模拟登录&lt;/li>
&lt;/ul>
&lt;p>selenium的弊端：效率低&lt;/p>
- https://a390177226.github.io/python/cookie/ - zzb2021.</description></item><item><title>python爬虫[3]--数据解析</title><link>https://a390177226.github.io/python/dataparse/</link><pubDate>Fri, 18 Jun 2021 15:07:15 +0800</pubDate><guid>https://a390177226.github.io/python/dataparse/</guid><description>ZZB's blog https://a390177226.github.io/python/dataparse/ -&lt;h1 id="方法">方法&lt;/h1>
&lt;ul>
&lt;li>正则表达式&lt;/li>
&lt;li>bs4&lt;/li>
&lt;li>xpath（重点）&lt;/li>
&lt;/ul>
&lt;h1 id="原理">原理&lt;/h1>
&lt;ul>
&lt;li>解析的局部的文本内容都会在标签之间或者标签对应的属性中进行存储
&lt;ul>
&lt;li>进行指定标签的定位&lt;/li>
&lt;li>标签或者标签的对应属性中存储的数据值进行提取（解析）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="爬取一张图片">爬取一张图片&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">url = &lt;span style="color:#cd5555">&amp;#39;https://pic.qiushibaike.com/system/pictures/12443/124437393/medium/6O8M8JJRDUFEGBAF.jpg&amp;#39;&lt;/span>
&lt;span style="color:#228b22"># content返回二进制形式的图片数据&lt;/span>
&lt;span style="color:#228b22"># text（字符串） content（二进制） json() （对象）&lt;/span>
img_data = requests.get(url=url).content
&lt;span style="color:#228b22"># 保存至本地&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;./test.jpg&amp;#39;&lt;/span>,&lt;span style="color:#cd5555">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(img_data)
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="正则案例">正则案例&lt;/h1>
&lt;h2 id="爬取糗事百科中热图板块第一页的所有图片">爬取糗事百科中热图板块第一页的所有图片&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">url = &lt;span style="color:#cd5555">&amp;#39;https://www.qiushibaike.com/imgrank/&amp;#39;&lt;/span>
&lt;span style="color:#228b22"># 先爬取url对应的一整张页面&lt;/span>
page = requests.get(url=url,headers=headers)
page.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
page_text = page.text
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用开发者工具查看一张图片的html源码为&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;thumb&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">a&lt;/span> &lt;span style="color:#658b00">href&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;/article/124437391&amp;#34;&lt;/span> &lt;span style="color:#658b00">target&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;_blank&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">img&lt;/span> &lt;span style="color:#658b00">src&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;//pic.qiushibaike.com/system/pictures/12443/124437391/medium/ZS4RPHR1F7GTTTGC.jpg&amp;#34;&lt;/span> &lt;span style="color:#658b00">alt&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;糗事#124437391&amp;#34;&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;illustration&amp;#34;&lt;/span> &lt;span style="color:#658b00">width&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;100%&amp;#34;&lt;/span> &lt;span style="color:#658b00">height&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;auto&amp;#34;&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">a&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>提取图片的src的正则表达式：&lt;/p>
&lt;p>&lt;code>ex = '&amp;lt;div class=&amp;quot;thumb&amp;quot;&amp;gt;.*?&amp;lt;img src=&amp;quot;(.*?)&amp;quot; alt.*?&amp;lt;/div&amp;gt;'&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 对页面中的所有图片进行解析/提取&lt;/span>
ex = &lt;span style="color:#cd5555">&amp;#39;&amp;lt;div class=&amp;#34;thumb&amp;#34;&amp;gt;.*?&amp;lt;img src=&amp;#34;(.*?)&amp;#34; alt.*?&amp;lt;/div&amp;gt;&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">re&lt;/span>
img_src_list = re.findall(ex,page_text,re.S)
&lt;span style="color:#228b22"># print(img_src_list)&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">os&lt;/span>
&lt;span style="color:#228b22"># 创建文件夹,用来存放图片&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> &lt;span style="color:#8b008b">not&lt;/span> os.path.exists(&lt;span style="color:#cd5555">&amp;#39;./imgs&amp;#39;&lt;/span>) :
os.mkdir(&lt;span style="color:#cd5555">&amp;#39;./imgs&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 保存图片至文件夹中&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> src &lt;span style="color:#8b008b">in&lt;/span> img_src_list:
&lt;span style="color:#228b22"># 拼接出一个完整的图片地址&lt;/span>
src = &lt;span style="color:#cd5555">&amp;#39;https:&amp;#39;&lt;/span> + src
&lt;span style="color:#228b22"># 请求到了图片的二进制数据&lt;/span>
img_data = requests.get(url=src, headers=headers).content
&lt;span style="color:#228b22"># 生成图片名称&lt;/span>
img_name = src.split(&lt;span style="color:#cd5555">&amp;#39;/&amp;#39;&lt;/span>)[-&lt;span style="color:#b452cd">1&lt;/span>]
&lt;span style="color:#228b22"># 图片存储的路径&lt;/span>
img_path = &lt;span style="color:#cd5555">&amp;#39;./imgs/&amp;#39;&lt;/span> + img_name
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(img_path,&lt;span style="color:#cd5555">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(img_data)
&lt;span style="color:#658b00">print&lt;/span>(img_name,&lt;span style="color:#cd5555">&amp;#39;下载成功！！！&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="爬取糗事百科中热图板块多个页面下的所有图片">爬取糗事百科中热图板块多个页面下的所有图片&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">requests&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">re&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">os&lt;/span>
headers = {
&lt;span style="color:#cd5555">&amp;#39;user-agent&amp;#39;&lt;/span>:&lt;span style="color:#cd5555">&amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36 Edg/91.0.864.48&amp;#39;&lt;/span>
}
&lt;span style="color:#228b22"># 创建文件夹&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> &lt;span style="color:#8b008b">not&lt;/span> os.path.exists(&lt;span style="color:#cd5555">&amp;#39;./imgs&amp;#39;&lt;/span>) :
os.mkdir(&lt;span style="color:#cd5555">&amp;#39;./imgs&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 设置一个通用的url模板&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://www.qiushibaike.com/imgrank/page/&lt;/span>&lt;span style="color:#cd5555">{}&lt;/span>&lt;span style="color:#cd5555">/&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> pageNum &lt;span style="color:#8b008b">in&lt;/span> &lt;span style="color:#658b00">range&lt;/span>(&lt;span style="color:#b452cd">1&lt;/span>,&lt;span style="color:#b452cd">3&lt;/span>):
&lt;span style="color:#228b22"># 对应页码的url&lt;/span>
new_url = url.format(pageNum)
&lt;span style="color:#658b00">print&lt;/span>(new_url)
&lt;span style="color:#228b22"># 先爬取url对应的一整张页面&lt;/span>
page = requests.get(url=new_url, headers=headers)
page.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
page_text = page.text
&lt;span style="color:#228b22"># 对页面中的所有图片进行解析/提取&lt;/span>
ex = &lt;span style="color:#cd5555">&amp;#39;&amp;lt;div class=&amp;#34;thumb&amp;#34;&amp;gt;.*?&amp;lt;img src=&amp;#34;(.*?)&amp;#34; alt.*?&amp;lt;/div&amp;gt;&amp;#39;&lt;/span>
img_src_list = re.findall(ex,page_text,re.S)
&lt;span style="color:#228b22"># print(img_src_list)&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> src &lt;span style="color:#8b008b">in&lt;/span> img_src_list:
&lt;span style="color:#228b22"># 拼接出一个完整的图片地址&lt;/span>
src = &lt;span style="color:#cd5555">&amp;#39;https:&amp;#39;&lt;/span> + src
&lt;span style="color:#228b22"># 请求到了图片的二进制数据&lt;/span>
img_data = requests.get(url=src, headers=headers).content
&lt;span style="color:#228b22"># 生成图片名称&lt;/span>
img_name = src.split(&lt;span style="color:#cd5555">&amp;#39;/&amp;#39;&lt;/span>)[-&lt;span style="color:#b452cd">1&lt;/span>]
&lt;span style="color:#228b22"># 图片存储的路径&lt;/span>
img_path = &lt;span style="color:#cd5555">&amp;#39;./imgs/&amp;#39;&lt;/span> + img_name
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(img_path,&lt;span style="color:#cd5555">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(img_data)
&lt;span style="color:#658b00">print&lt;/span>(img_name,&lt;span style="color:#cd5555">&amp;#39;下载成功！！！&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="bs4">bs4&lt;/h1>
&lt;h2 id="原理-1">原理&lt;/h2>
&lt;ul>
&lt;li>实例化一个BeautifulSoup对象，并且将页面源码数据加载到该对象中&lt;/li>
&lt;li>通过调用BeautifulSoup对象中相关的属性或者方法进行标签定位和数据提取&lt;/li>
&lt;/ul>
&lt;h2 id="环境安装">环境安装&lt;/h2>
&lt;ul>
&lt;li>&lt;code>pip install bs4&lt;/code>&lt;/li>
&lt;li>&lt;code>pip install lxml&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="实例化beautifulsoup对象">实例化BeautifulSoup对象&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">bs4&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> BeautifulSoup
&lt;span style="color:#228b22"># 对象的实例化：&lt;/span>
&lt;span style="color:#228b22"># 第一种：将本地的html文档中的数据加载到该对象中&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;./test.html&amp;#39;&lt;/span>,&lt;span style="color:#cd5555">&amp;#39;r&amp;#39;&lt;/span>,encoding=&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
soup = BeautifulSoup(fp,&lt;span style="color:#cd5555">&amp;#39;lxml&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 第二种：将互联网上获取的页面源码加载到该对象,更常用&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://www.sogou.com/&amp;#39;&lt;/span>
response = requests.get(url=url)
page_text = response.text
soup = BeautifulSoup(page_text,&lt;span style="color:#cd5555">&amp;#39;lxml&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="testhtml">test.html&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#1e889b">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">html&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">title&lt;/span>&amp;gt;Document&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">title&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">h1&lt;/span>&amp;gt;My First Heading&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">h1&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;My first paragraph.&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#39;p1&amp;#39;&lt;/span>&amp;gt;My second paragraph.&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">p&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span> &lt;span style="color:#658b00">class&lt;/span>=&lt;span style="color:#cd5555">&amp;#39;d1&amp;#39;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">ul&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">li&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">a&lt;/span> &lt;span style="color:#658b00">href&lt;/span>=&lt;span style="color:#cd5555">&amp;#39;www.baidu.com&amp;#39;&lt;/span>&amp;gt;111&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">a&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">li&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">li&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">a&lt;/span> &lt;span style="color:#658b00">href&lt;/span>=&lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>&amp;gt;222&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">a&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">li&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">li&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#8b008b;font-weight:bold">a&lt;/span> &lt;span style="color:#658b00">href&lt;/span>=&lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>&amp;gt;333&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">a&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">li&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">ul&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">div&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">body&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#8b008b;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="beautifulsoup对象的属性和方法">BeautifulSoup对象的属性和方法&lt;/h2>
&lt;p>定位&lt;/p>
&lt;ul>
&lt;li>soup.tagName&lt;/li>
&lt;li>soup.find()&lt;/li>
&lt;li>soup.find_all()&lt;/li>
&lt;li>soup.select()&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;./test.html&amp;#39;&lt;/span>,&lt;span style="color:#cd5555">&amp;#39;r&amp;#39;&lt;/span>,encoding=&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
soup = BeautifulSoup(fp,&lt;span style="color:#cd5555">&amp;#39;lxml&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># soup.tagName 返回的是html中第1次出现的tagName对象的标签&lt;/span>
&lt;span style="color:#658b00">print&lt;/span>(soup.p)
&lt;span style="color:#228b22"># soup.find()&lt;/span>
&lt;span style="color:#228b22"># 第一种：soup.find(&amp;#39;tagName&amp;#39;) 等同于soup.tagName&lt;/span>
&lt;span style="color:#658b00">print&lt;/span>(soup.find(&lt;span style="color:#cd5555">&amp;#39;p&amp;#39;&lt;/span>))
&lt;span style="color:#228b22"># 第二种：属性定位&lt;/span>
&lt;span style="color:#658b00">print&lt;/span>(soup.find(&lt;span style="color:#cd5555">&amp;#39;p&amp;#39;&lt;/span>,class_= &lt;span style="color:#cd5555">&amp;#39;p1&amp;#39;&lt;/span>))
&lt;span style="color:#228b22"># soup.find_all() 返回符合要求的所有标签（列表）&lt;/span>
&lt;span style="color:#658b00">print&lt;/span>(soup.find_all(&lt;span style="color:#cd5555">&amp;#39;p&amp;#39;&lt;/span>))
&lt;span style="color:#228b22"># soup.select() 返回一个列表&lt;/span>
&lt;span style="color:#228b22"># 标签选择器&lt;/span>
&lt;span style="color:#658b00">print&lt;/span>(soup.select(&lt;span style="color:#cd5555">&amp;#39;p&amp;#39;&lt;/span>))
&lt;span style="color:#228b22"># 类选择器&lt;/span>
&lt;span style="color:#658b00">print&lt;/span>(soup.select(&lt;span style="color:#cd5555">&amp;#39;.p1&amp;#39;&lt;/span>))
&lt;span style="color:#228b22"># 层级选择器：&amp;#34;&amp;gt;&amp;#34;表示一个层级，空格表示多个层级&lt;/span>
&lt;span style="color:#658b00">print&lt;/span>(soup.select(&lt;span style="color:#cd5555">&amp;#39;.d1 &amp;gt; ul &amp;gt; li &amp;gt; a&amp;#39;&lt;/span>))
&lt;span style="color:#658b00">print&lt;/span>(soup.select(&lt;span style="color:#cd5555">&amp;#39;.d1 &amp;gt; ul a&amp;#39;&lt;/span>))
&lt;/code>&lt;/pre>&lt;/div>&lt;p>获取标签之间的文本数据&lt;/p>
&lt;ul>
&lt;li>soup.a.text&lt;/li>
&lt;li>soup.a.string&lt;/li>
&lt;li>get_text()&lt;/li>
&lt;/ul>
&lt;p>获取标签中的属性值&lt;/p>
&lt;ul>
&lt;li>soup.a[&amp;lsquo;href&amp;rsquo;]&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">a = soup.select(&lt;span style="color:#cd5555">&amp;#39;.d1 &amp;gt; ul&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]
&lt;span style="color:#228b22"># .text和get_text() 返回某个标签下中所有的文本内容&lt;/span>
&lt;span style="color:#228b22"># .string只返回该标签下直系的文本内容&lt;/span>
&lt;span style="color:#658b00">print&lt;/span>(a.text)
&lt;span style="color:#658b00">print&lt;/span>(a.string)
&lt;span style="color:#228b22"># 获取属性值&lt;/span>
&lt;span style="color:#658b00">print&lt;/span>(soup.a[&lt;span style="color:#cd5555">&amp;#39;href&amp;#39;&lt;/span>])
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="bs4案例">bs4案例&lt;/h2>
&lt;p>爬取诗词名句网的三国演义&lt;/p>
&lt;ul>
&lt;li>url：&lt;a href="https://www.shicimingju.com/book/sanguoyanyi.html">https://www.shicimingju.com/book/sanguoyanyi.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 对书籍的页面数据进行爬取&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://www.shicimingju.com/book/sanguoyanyi.html&amp;#39;&lt;/span>
response = requests.get(url=url, headers=headers)
response.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
page_text = response.text
&lt;span style="color:#228b22"># 在首页中解析出章节的标题和详情页的url&lt;/span>
&lt;span style="color:#228b22"># 1.实例化BeautifulSoup对象&lt;/span>
soup = BeautifulSoup(page_text, &lt;span style="color:#cd5555">&amp;#39;lxml&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 2.解析章节标题和详情页的url，并保存&lt;/span>
a_list = soup.select(&lt;span style="color:#cd5555">&amp;#39;div.book-mulu &amp;gt; ul &amp;gt; li &amp;gt; a&amp;#39;&lt;/span>)
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;./sanguo.txt&amp;#39;&lt;/span>,&lt;span style="color:#cd5555">&amp;#39;w&amp;#39;&lt;/span>,encoding=&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> a &lt;span style="color:#8b008b">in&lt;/span> a_list:
title = a.string
detail_url = &lt;span style="color:#cd5555">&amp;#39;https://www.shicimingju.com&amp;#39;&lt;/span> + a[&lt;span style="color:#cd5555">&amp;#39;href&amp;#39;&lt;/span>]
&lt;span style="color:#228b22"># 对详情页发起请求&lt;/span>
detail_response = requests.get(url=detail_url, headers=headers)
detail_response.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
detail_page_text = detail_response.text
&lt;span style="color:#228b22"># 解析出详情页中相关的章节内容&lt;/span>
detail_soup = BeautifulSoup(detail_page_text, &lt;span style="color:#cd5555">&amp;#39;lxml&amp;#39;&lt;/span>)
div_tag = detail_soup.find(&lt;span style="color:#cd5555">&amp;#39;div&amp;#39;&lt;/span>,class_=&lt;span style="color:#cd5555">&amp;#39;chapter_content&amp;#39;&lt;/span>)
content = div_tag.text
fp.write(title+&lt;span style="color:#cd5555">&amp;#39;:&amp;#39;&lt;/span>+content +&lt;span style="color:#cd5555">&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\n&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span>)
&lt;span style="color:#658b00">print&lt;/span>(title,&lt;span style="color:#cd5555">&amp;#39;爬取成功！！！&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="xpath">xpath&lt;/h1>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>&lt;code>pip install lxml&lt;/code>&lt;/p>
&lt;h2 id="解析原理">解析原理&lt;/h2>
&lt;p>html标签是以树状的形式进行展示&lt;/p>
&lt;ul>
&lt;li>实例化一个etree的对象，且将待解析的页面源码数据加载到该对象中&lt;/li>
&lt;li>调用etree对象的xpath方法结合着不同的xpath表达式实现标签的定位和数据提取&lt;/li>
&lt;/ul>
&lt;h2 id="实例化etree对象">实例化etree对象&lt;/h2>
&lt;ul>
&lt;li>etree.parse(&amp;lsquo;filename&amp;rsquo;)：本地html文档加载到该对象中&lt;/li>
&lt;li>etree.HTML(page_text)：网站获取的页面数据加载到该对象&lt;/li>
&lt;/ul>
&lt;h2 id="etree对象的属性和方法">etree对象的属性和方法&lt;/h2>
&lt;p>标签定位&lt;/p>
&lt;ul>
&lt;li>tree.xpath()&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">lxml&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> etree
tree = etree.parse(&lt;span style="color:#cd5555">&amp;#39;./test.html&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 定位div&lt;/span>
&lt;span style="color:#228b22"># 一个&amp;#34;/&amp;#34;表示一个层级&lt;/span>
tree.xpath(&lt;span style="color:#cd5555">&amp;#39;/html/body/div&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 两个&amp;#34;/&amp;#34;表示多个层级&lt;/span>
tree.xpath(&lt;span style="color:#cd5555">&amp;#39;/html//div&amp;#39;&lt;/span>)
tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//div&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 属性定位&lt;/span>
&lt;span style="color:#228b22"># 定位class为d1的div下的所有a&lt;/span>
tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//div[@class=&amp;#34;d1&amp;#34;]//a&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 索引定位: 索引从1开始&lt;/span>
&lt;span style="color:#228b22"># 定位p下的第二个p&lt;/span>
tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//p[2]&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>取文本和属性&lt;/p>
&lt;ul>
&lt;li>/text()&lt;/li>
&lt;li>//text()&lt;/li>
&lt;li>/@attrName&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 取文本&lt;/span>
&lt;span style="color:#228b22"># /text() 返回直系文本&lt;/span>
tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//div/text()&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># //text() 返回所有文本&lt;/span>
tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//div//text()&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 取属性&lt;/span>
tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//div//a/@href&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="案例1-美女图片">案例1-美女图片&lt;/h2>
&lt;p>解析图片数据&lt;/p>
&lt;ul>
&lt;li>url：&lt;a href="https://pic.netbian.com/4kmeinv/">http://pic.netbian.com/4kmeinv/&lt;/a>&lt;/li>
&lt;li>重点：局部数据解析&lt;/li>
&lt;li>xpath路径可以从开发者工具那里复制&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">requests&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">os&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">lxml&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> etree
headers = {
&lt;span style="color:#cd5555">&amp;#39;user-agent&amp;#39;&lt;/span>:&lt;span style="color:#cd5555">&amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36 Edg/91.0.864.48&amp;#39;&lt;/span>
}
&lt;span style="color:#228b22"># 创建文件夹&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> &lt;span style="color:#8b008b">not&lt;/span> os.path.exists(&lt;span style="color:#cd5555">&amp;#39;./imgs&amp;#39;&lt;/span>) :
os.mkdir(&lt;span style="color:#cd5555">&amp;#39;./imgs&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 爬取第1页&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://pic.netbian.com/4kmeinv/&amp;#39;&lt;/span>
response = requests.get(url=url, headers=headers)
response.encoding = &lt;span style="color:#cd5555">&amp;#39;gbk&amp;#39;&lt;/span>
page_text = response.text
&lt;span style="color:#228b22"># 图片名称+图片数据&lt;/span>
tree = etree.HTML(page_text)
&lt;span style="color:#228b22"># 存储的是定位到的指定的li标签&lt;/span>
li_list = tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//div[@class=&amp;#34;slist&amp;#34;]/ul/li&amp;#39;&lt;/span>)
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> li &lt;span style="color:#8b008b">in&lt;/span> li_list:
&lt;span style="color:#228b22"># li的数据类型和tree的数据类型一样，li也可以调用xpath方法&lt;/span>
&lt;span style="color:#228b22"># print(type(li))&lt;/span>
&lt;span style="color:#228b22"># 局部数据解析&lt;/span>
title = li.xpath(&lt;span style="color:#cd5555">&amp;#39;./a/img/@alt&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]+&lt;span style="color:#cd5555">&amp;#39;.jpg&amp;#39;&lt;/span>
img_src = &lt;span style="color:#cd5555">&amp;#39;https://pic.netbian.com&amp;#39;&lt;/span>+li.xpath(&lt;span style="color:#cd5555">&amp;#39;./a/img/@src&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]
&lt;span style="color:#228b22"># print(title,img_src)&lt;/span>
img_data = requests.get(url=img_src, headers=headers).content
img_path = &lt;span style="color:#cd5555">&amp;#39;./imgs/&amp;#39;&lt;/span>+ title
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(img_path,&lt;span style="color:#cd5555">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(img_data)
&lt;span style="color:#658b00">print&lt;/span>(title,&lt;span style="color:#cd5555">&amp;#39;保存成功了&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 爬取多页&lt;/span>
&lt;span style="color:#228b22"># 定义一个通用的url模板：不可变&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://pic.netbian.com/4kmeinv/index_&lt;/span>&lt;span style="color:#cd5555">{}&lt;/span>&lt;span style="color:#cd5555">.html&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> page &lt;span style="color:#8b008b">in&lt;/span> &lt;span style="color:#658b00">range&lt;/span>(&lt;span style="color:#b452cd">1&lt;/span>,&lt;span style="color:#b452cd">3&lt;/span>):
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> page ==&lt;span style="color:#b452cd">1&lt;/span>:
new_url = &lt;span style="color:#cd5555">&amp;#39;https://pic.netbian.com/4kmeinv/index.html&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">else&lt;/span>:
new_url = url.format(page)
&lt;span style="color:#228b22"># print(new_url)&lt;/span>
response = requests.get(url=new_url, headers=headers)
response.encoding = &lt;span style="color:#cd5555">&amp;#39;gbk&amp;#39;&lt;/span>
page_text = response.text
&lt;span style="color:#228b22"># 图片名称+图片数据&lt;/span>
tree = etree.HTML(page_text)
&lt;span style="color:#228b22"># 存储的是定位到的指定的li标签&lt;/span>
li_list = tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//div[@class=&amp;#34;slist&amp;#34;]/ul/li&amp;#39;&lt;/span>)
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> li &lt;span style="color:#8b008b">in&lt;/span> li_list:
&lt;span style="color:#228b22"># li的数据类型和tree的数据类型一样，li也可以调用xpath方法&lt;/span>
&lt;span style="color:#228b22"># print(type(li))&lt;/span>
&lt;span style="color:#228b22"># 局部数据解析&lt;/span>
title = li.xpath(&lt;span style="color:#cd5555">&amp;#39;./a/img/@alt&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]+&lt;span style="color:#cd5555">&amp;#39;.jpg&amp;#39;&lt;/span>
img_src = &lt;span style="color:#cd5555">&amp;#39;https://pic.netbian.com&amp;#39;&lt;/span>+li.xpath(&lt;span style="color:#cd5555">&amp;#39;./a/img/@src&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]
&lt;span style="color:#228b22"># print(title,img_src)&lt;/span>
img_data = requests.get(url=img_src, headers=headers).content
img_path = &lt;span style="color:#cd5555">&amp;#39;./imgs/&amp;#39;&lt;/span>+ title
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(img_path,&lt;span style="color:#cd5555">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(img_data)
&lt;span style="color:#658b00">print&lt;/span>(title,&lt;span style="color:#cd5555">&amp;#39;保存成功了&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>需求：要求解析出携带html标签的局部数据？&lt;/p>
&lt;ul>
&lt;li>使用bs4&lt;/li>
&lt;/ul>
&lt;p>如何使xpath表达式更具有通用性？&lt;/p>
&lt;ul>
&lt;li>在xpath表达式中使用管道符&amp;quot;|&amp;quot;，可以表示管道符左右两侧的子xpath表达式同时生效或者一个生效&lt;/li>
&lt;/ul>
&lt;h2 id="案例2-个人简历">案例2-个人简历&lt;/h2>
&lt;p>爬取站长素材的个人简历&lt;/p>
&lt;ul>
&lt;li>url：&lt;a href="https://sc.chinaz.com/jianli/">https://sc.chinaz.com/jianli/&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">requests&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">os&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">lxml&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> etree
headers = {
&lt;span style="color:#cd5555">&amp;#39;user-agent&amp;#39;&lt;/span>:&lt;span style="color:#cd5555">&amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36 Edg/91.0.864.48&amp;#39;&lt;/span>
}
&lt;span style="color:#228b22"># 创建文件夹&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> &lt;span style="color:#8b008b">not&lt;/span> os.path.exists(&lt;span style="color:#cd5555">&amp;#39;./imgs&amp;#39;&lt;/span>) :
os.mkdir(&lt;span style="color:#cd5555">&amp;#39;./imgs&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 爬取第1页&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://sc.chinaz.com/jianli/&amp;#39;&lt;/span>
response = requests.get(url=url, headers=headers)
response.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
page_text= response.text
tree = etree.HTML(page_text)
li_list = tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//div[@id=&amp;#34;container&amp;#34;]/div&amp;#39;&lt;/span>)
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> li &lt;span style="color:#8b008b">in&lt;/span> li_list:
&lt;span style="color:#228b22"># 局部数据解析&lt;/span>
title = li.xpath(&lt;span style="color:#cd5555">&amp;#39;./a/img/@alt&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>] +&lt;span style="color:#cd5555">&amp;#39;.rar&amp;#39;&lt;/span>
jianli_url = &lt;span style="color:#cd5555">&amp;#39;https:&amp;#39;&lt;/span>+li.xpath(&lt;span style="color:#cd5555">&amp;#39;./a/@href&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]
&lt;span style="color:#228b22"># print(title,jianli_url)&lt;/span>
&lt;span style="color:#228b22"># 进入一个简历的页面&lt;/span>
jianli_page = requests.get(url=jianli_url, headers=headers)
jianli_page.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
jianli_text= jianli_page.text
&lt;span style="color:#228b22"># print(jianli_text)&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">try&lt;/span>:
&lt;span style="color:#228b22"># 在该页面中找到下载地址&lt;/span>
jianli_tree = etree.HTML(jianli_text)
jianli_src = jianli_tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//*[@id=&amp;#34;down&amp;#34;]/div[2]/ul/li[1]/a/@href&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]
&lt;span style="color:#228b22"># print(&amp;#39;下载链接：&amp;#39;+jianli_src)&lt;/span>
&lt;span style="color:#228b22"># 下载简历&lt;/span>
jianli_data = requests.get(url=jianli_src, headers=headers).content
jianli_path = &lt;span style="color:#cd5555">&amp;#39;./imgs/&amp;#39;&lt;/span>+ title
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(jianli_path,&lt;span style="color:#cd5555">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(jianli_data)
&lt;span style="color:#658b00">print&lt;/span>(title,&lt;span style="color:#cd5555">&amp;#39;保存成功了&amp;#39;&lt;/span>)
&lt;span style="color:#8b008b;font-weight:bold">except&lt;/span> &lt;span style="color:#008b45;font-weight:bold">Exception&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> err:
&lt;span style="color:#658b00">print&lt;/span>(title,&lt;span style="color:#cd5555">&amp;#39;下载失败了&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 爬取多页&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://sc.chinaz.com/jianli/index_&lt;/span>&lt;span style="color:#cd5555">{}&lt;/span>&lt;span style="color:#cd5555">.html&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> page &lt;span style="color:#8b008b">in&lt;/span> &lt;span style="color:#658b00">range&lt;/span>(&lt;span style="color:#b452cd">1&lt;/span>,&lt;span style="color:#b452cd">3&lt;/span>):
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> page ==&lt;span style="color:#b452cd">1&lt;/span>:
new_url = &lt;span style="color:#cd5555">&amp;#39;https://sc.chinaz.com/jianli/index.html&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">else&lt;/span>:
new_url = url.format(page)
&lt;span style="color:#228b22"># print(new_url)&lt;/span>
response = requests.get(url=new_url, headers=headers)
response.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
page_text= response.text
tree = etree.HTML(page_text)
li_list = tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//div[@id=&amp;#34;container&amp;#34;]/div&amp;#39;&lt;/span>)
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> li &lt;span style="color:#8b008b">in&lt;/span> li_list:
&lt;span style="color:#228b22"># 局部数据解析&lt;/span>
title = li.xpath(&lt;span style="color:#cd5555">&amp;#39;./a/img/@alt&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>] +&lt;span style="color:#cd5555">&amp;#39;.rar&amp;#39;&lt;/span>
jianli_url = &lt;span style="color:#cd5555">&amp;#39;https:&amp;#39;&lt;/span>+li.xpath(&lt;span style="color:#cd5555">&amp;#39;./a/@href&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]
&lt;span style="color:#228b22"># print(title,jianli_url)&lt;/span>
&lt;span style="color:#228b22"># 进入一个简历的页面&lt;/span>
jianli_page = requests.get(url=jianli_url, headers=headers)
jianli_page.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
jianli_text= jianli_page.text
&lt;span style="color:#228b22"># print(jianli_text)&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">try&lt;/span>:
&lt;span style="color:#228b22"># 在该页面中找到下载地址&lt;/span>
jianli_tree = etree.HTML(jianli_text)
jianli_src = jianli_tree.xpath(&lt;span style="color:#cd5555">&amp;#39;//*[@id=&amp;#34;down&amp;#34;]/div[2]/ul/li[1]/a/@href&amp;#39;&lt;/span>)[&lt;span style="color:#b452cd">0&lt;/span>]
&lt;span style="color:#228b22"># print(&amp;#39;下载链接：&amp;#39;+jianli_src)&lt;/span>
&lt;span style="color:#228b22"># 下载简历&lt;/span>
jianli_data = requests.get(url=jianli_src, headers=headers).content
jianli_path = &lt;span style="color:#cd5555">&amp;#39;./imgs/&amp;#39;&lt;/span>+ title
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(jianli_path,&lt;span style="color:#cd5555">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(jianli_data)
&lt;span style="color:#658b00">print&lt;/span>(title,&lt;span style="color:#cd5555">&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\t\t\t&lt;/span>&lt;span style="color:#cd5555">保存成功了&amp;#39;&lt;/span>)
&lt;span style="color:#8b008b;font-weight:bold">except&lt;/span> &lt;span style="color:#008b45;font-weight:bold">Exception&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> err:
&lt;span style="color:#658b00">print&lt;/span>(title,&lt;span style="color:#cd5555">&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\t\t\t&lt;/span>&lt;span style="color:#cd5555">下载失败了&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>站长素材高清图片下载&lt;/p>
&lt;ul>
&lt;li>反爬机制：图片懒加载，广泛应用于一些图片的网站中
&lt;ul>
&lt;li>只有当图片被显示在浏览器可视化范围之内才会将img的伪属性变成真正的属性&lt;/li>
&lt;li>如果是requests发起的请求，是没有可视化范围的，因此要解析img伪属性的值（图片地址）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
- https://a390177226.github.io/python/dataparse/ - zzb2021.</description></item><item><title>python爬虫[2]--requests模块</title><link>https://a390177226.github.io/python/requests/</link><pubDate>Thu, 10 Jun 2021 15:07:15 +0800</pubDate><guid>https://a390177226.github.io/python/requests/</guid><description>ZZB's blog https://a390177226.github.io/python/requests/ -&lt;h1 id="网络请求模块">网络请求模块&lt;/h1>
&lt;ul>
&lt;li>urllib模块：古老繁琐&lt;/li>
&lt;li>requests模块：简洁高效&lt;/li>
&lt;/ul>
&lt;h1 id="requests模块">requests模块&lt;/h1>
&lt;p>python中原生的一款基于网络请求的模块，功能非常强大，简单便捷，效率极高。&lt;/p>
&lt;p>作用：模拟浏览器发送请求。&lt;/p>
&lt;p>安装：&lt;code>pip install requests&lt;/code>&lt;/p>
&lt;h1 id="topics">topics&lt;/h1>
&lt;ul>
&lt;li>数据解析&lt;/li>
&lt;li>动态数据的爬取&lt;/li>
&lt;li>selenium&lt;/li>
&lt;li>移动端数据的爬取&lt;/li>
&lt;li>异步的爬虫&lt;/li>
&lt;li>10种反爬机制&lt;/li>
&lt;/ul>
&lt;h1 id="第一个例子">第一个例子&lt;/h1>
&lt;p>爬取搜狗首页的页面数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">requests&lt;/span>
&lt;span style="color:#228b22"># step1: 指定url&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://www.sogou.com/&amp;#39;&lt;/span>
&lt;span style="color:#228b22"># step2：发起请求&lt;/span>
&lt;span style="color:#228b22"># get方法会返回一个响应对象&lt;/span>
response = requests.get(url=url)
&lt;span style="color:#228b22"># step3: 获取响应数据&lt;/span>
&lt;span style="color:#228b22"># .text返回的是字符串形式的响应数据&lt;/span>
page_text = response.text
&lt;span style="color:#228b22"># step4: 持久化存储&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;./sogou.html&amp;#39;&lt;/span>,&lt;span style="color:#cd5555">&amp;#39;w&amp;#39;&lt;/span>,encoding=&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(page_text)
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="简易网页采集器">简易网页采集器&lt;/h1>
&lt;p>基于搜狗针对指定不同的关键字将其对应的页面数据进行爬取&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">keyWord = &lt;span style="color:#658b00">input&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;enter a key word:&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 携带了请求参数的url，如果想要爬取不同关键字对应的页面，我们需要将url携带的参数进行动态化&lt;/span>
&lt;span style="color:#228b22"># 实现参数动态化：&lt;/span>
params = {
&lt;span style="color:#cd5555">&amp;#39;query&amp;#39;&lt;/span>:keyWord
}
url = &lt;span style="color:#cd5555">&amp;#39;https://www.sogou.com/web&amp;#39;&lt;/span>
&lt;span style="color:#228b22"># params参数（字典）：保存请求时url携带的参数&lt;/span>
response = requests.get(url=url, params=params)
&lt;span style="color:#228b22"># 修改响应数据的编码格式&lt;/span>
response.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
page_text = response.text
fileName = keyWord + &lt;span style="color:#cd5555">&amp;#39;.html&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(fileName, &lt;span style="color:#cd5555">&amp;#39;w&amp;#39;&lt;/span>, encoding=&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(page_text)
&lt;span style="color:#658b00">print&lt;/span>(fileName, &lt;span style="color:#cd5555">&amp;#39;爬取完毕！！！&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>页面显示【异常访问请求】导致请求数据的缺失&lt;/p>
&lt;ul>
&lt;li>
&lt;p>异常访问请求：不是通过浏览器发起的请求&lt;/p>
&lt;ul>
&lt;li>网站后台已经检测出该次请求不是通过浏览器发起的，而是通过爬虫程序发起的请求&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>网站的后台是如何知道请求是不是通过浏览器发起的呢？&lt;/p>
&lt;ul>
&lt;li>是通过判定请求的请求头部中的user-agent判定的&lt;/li>
&lt;li>什么是user-agent：请求载体的身份标识&lt;/li>
&lt;li>什么是请求载体
&lt;ul>
&lt;li>浏览器：身份标识是统一固定的，可以通过抓包工具中获取&lt;/li>
&lt;li>爬虫程序：身份标识是各自不同的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>第一个反爬机制：&lt;/p>
&lt;ul>
&lt;li>robots协议&lt;/li>
&lt;/ul>
&lt;p>第二个反爬机制：&lt;/p>
&lt;ul>
&lt;li>UA检测：网站后台会检测请求对应的user-agent，判定当前请求是否为异常请求&lt;/li>
&lt;/ul>
&lt;p>反反爬机制：&lt;/p>
&lt;ul>
&lt;li>UA伪装&lt;/li>
&lt;li>伪装流程：
&lt;ul>
&lt;li>从抓包工具中捕获到某一个基于浏览器请求的user-agent的值，将其伪装到一个字典中&lt;/li>
&lt;li>将该字典作用到请求方法（get，post）的headers参数中即可&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">keyWord = &lt;span style="color:#658b00">input&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;enter a key word:&amp;#39;&lt;/span>)
&lt;span style="color:#228b22"># 用来实现UA伪装&lt;/span>
headers = {
&lt;span style="color:#cd5555">&amp;#39;user-agent&amp;#39;&lt;/span>:&lt;span style="color:#cd5555">&amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36 Edg/91.0.864.48&amp;#39;&lt;/span>
}
&lt;span style="color:#228b22"># 实现参数动态化：&lt;/span>
params = {
&lt;span style="color:#cd5555">&amp;#39;query&amp;#39;&lt;/span>:keyWord
}
url = &lt;span style="color:#cd5555">&amp;#39;https://www.sogou.com/web&amp;#39;&lt;/span>
&lt;span style="color:#228b22"># params参数（字典）：保存请求时url携带的参数&lt;/span>
response = requests.get(url=url, params=params, headers = headers)
&lt;span style="color:#228b22"># 修改响应数据的编码格式&lt;/span>
response.encoding = &lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>
page_text = response.text
fileName = keyWord + &lt;span style="color:#cd5555">&amp;#39;.html&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(fileName, &lt;span style="color:#cd5555">&amp;#39;w&amp;#39;&lt;/span>, encoding=&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(page_text)
&lt;span style="color:#658b00">print&lt;/span>(fileName, &lt;span style="color:#cd5555">&amp;#39;爬取完毕！！！&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="爬取动态加载数据">爬取动态加载数据&lt;/h1>
&lt;p>爬取豆瓣电影中的电影详情数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 一个爬取失败的例子&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;https://movie.douban.com/typerank?type_name=&lt;/span>&lt;span style="color:#cd5555">%E&lt;/span>&lt;span style="color:#cd5555">5%8A%A8&lt;/span>&lt;span style="color:#cd5555">%E&lt;/span>&lt;span style="color:#cd5555">4%BD%9C&amp;amp;type=5&amp;amp;interval_id=100:90&amp;amp;action=&amp;#39;&lt;/span>
response = requests.get(url=url, headers = headers)
page_text = response.text
fileName = &lt;span style="color:#cd5555">&amp;#39;./douban.html&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(fileName, &lt;span style="color:#cd5555">&amp;#39;w&amp;#39;&lt;/span>, encoding=&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
fp.write(page_text)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>动态加载数据的捕获&lt;/p>
&lt;ul>
&lt;li>什么是动态加载的数据？
&lt;ul>
&lt;li>我们通过requests模块进行数据爬取无法每次都实现可见即可得&lt;/li>
&lt;li>有些数据是通过非浏览器地址栏中的url请求到的数据，而是其他请求请求到的数据，那么这些数据就是动态加载数据&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如何检测网页中是否存在动态加载数据？
&lt;ul>
&lt;li>基于抓包工具进行局部搜索
&lt;ul>
&lt;li>在当前网页中打开抓包工具，找到到地址栏的url对应的数据包&lt;/li>
&lt;li>在该数据包的response选项卡搜索想要爬取的数据&lt;/li>
&lt;li>如果搜索到了结果，则表示数据不是动态加载的，否则表示数据是动态加载的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如何捕获到动态加载的数据？
&lt;ul>
&lt;li>基于抓包工具进行全局搜索&lt;/li>
&lt;li>定位到动态加载数据对应的数据包，可以从中提取出
&lt;ul>
&lt;li>请求的url&lt;/li>
&lt;li>请求方式&lt;/li>
&lt;li>请求携带的参数&lt;/li>
&lt;li>看到响应数据&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">url = &lt;span style="color:#cd5555">&amp;#39;https://movie.douban.com/j/chart/top_list&amp;#39;&lt;/span>
params = {
&lt;span style="color:#cd5555">&amp;#39;type&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;5&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;interval_id&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;100:90&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;action&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;start&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;0&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;limit&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;20&amp;#39;&lt;/span>
}
response = requests.get(url=url, params=params, headers = headers)
&lt;span style="color:#228b22"># .json()将获取的字符串形式的json数据序列化成字典或者列表对象&lt;/span>
page_text = response.json()
&lt;span style="color:#228b22"># 解析出电影的名称+评分&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> movie &lt;span style="color:#8b008b">in&lt;/span> page_text:
name = movie[&lt;span style="color:#cd5555">&amp;#39;title&amp;#39;&lt;/span>]
score = movie[&lt;span style="color:#cd5555">&amp;#39;score&amp;#39;&lt;/span>]
&lt;span style="color:#658b00">print&lt;/span>(name,score)
&lt;span style="color:#228b22"># 或者持久化存储 &lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;./test&amp;#34;&lt;/span>, &lt;span style="color:#cd5555">&amp;#34;w&amp;#34;&lt;/span>, encoding=&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> movie &lt;span style="color:#8b008b">in&lt;/span> page_text:
name = movie[&lt;span style="color:#cd5555">&amp;#39;title&amp;#39;&lt;/span>]
score = movie[&lt;span style="color:#cd5555">&amp;#39;score&amp;#39;&lt;/span>]
eachRow = name+&lt;span style="color:#cd5555">&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\t&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span>+score+&lt;span style="color:#cd5555">&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\n&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span>
fp.write(eachRow)
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>思考：基于抓包工具进行全局搜索不一定可以每次都能定位到动态加载数据对应的数据包？&lt;/p>
&lt;p>原因：动态加载的数据是经过加密的密文数据&lt;/p>
&lt;/blockquote>
&lt;h1 id="爬取多页数据">爬取多页数据&lt;/h1>
&lt;p>爬取肯德基的餐厅位置数据&lt;/p>
&lt;ul>
&lt;li>url：&lt;a href="http://www.kfc.com.cn/kfccda/storelist/">http://www.kfc.com.cn/kfccda/storelist/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>分析&lt;/p>
&lt;ul>
&lt;li>在餐厅关键字的文本框中输入关键字按下搜索按钮，发起的是一个ajax请求
&lt;ul>
&lt;li>当前页面刷新出来的位置信息一定是通过ajax请求请求到的数据&lt;/li>
&lt;li>基于抓包工具定位到该ajax请求的数据包，从该数据包中捕获到：
&lt;ul>
&lt;li>请求的url&lt;/li>
&lt;li>请求方式&lt;/li>
&lt;li>请求携带的参数&lt;/li>
&lt;li>看到响应数据&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 爬取第1页的数据&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;http://www.kfc.com.cn/kfccda/ashx/GetStoreList.ashx?op=keyword&amp;#39;&lt;/span>
&lt;span style="color:#228b22"># data参数是post方法中处理参数动态化的参数&lt;/span>
data = {
&lt;span style="color:#cd5555">&amp;#39;cname&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;pid&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;keyword&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;北京&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;pageIndex&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;1&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;pageSize&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;10&amp;#39;&lt;/span>
}
response = requests.post(url=url, data=data, headers = headers)
page_text = response.json()
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> dic &lt;span style="color:#8b008b">in&lt;/span> page_text[&lt;span style="color:#cd5555">&amp;#39;Table1&amp;#39;&lt;/span>]:
title = dic[&lt;span style="color:#cd5555">&amp;#39;storeName&amp;#39;&lt;/span>]
addr = dic[&lt;span style="color:#cd5555">&amp;#39;addressDetail&amp;#39;&lt;/span>]
&lt;span style="color:#658b00">print&lt;/span>(title,addr)
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 爬取多页&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;http://www.kfc.com.cn/kfccda/ashx/GetStoreList.ashx?op=keyword&amp;#39;&lt;/span>
data = {
&lt;span style="color:#cd5555">&amp;#39;cname&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;pid&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;keyword&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;北京&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;pageIndex&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;1&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;pageSize&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;10&amp;#39;&lt;/span>
}
response = requests.post(url=url, data=data, headers = headers)
page_text = response.json()
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> dic &lt;span style="color:#8b008b">in&lt;/span> page_text[&lt;span style="color:#cd5555">&amp;#39;Table1&amp;#39;&lt;/span>]:
title = dic[&lt;span style="color:#cd5555">&amp;#39;storeName&amp;#39;&lt;/span>]
addr = dic[&lt;span style="color:#cd5555">&amp;#39;addressDetail&amp;#39;&lt;/span>]
&lt;span style="color:#658b00">print&lt;/span>(title,addr)
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="作业">作业&lt;/h1>
&lt;p>爬取化药监总局中的企业详情数据&lt;/p>
&lt;ul>
&lt;li>url：&lt;a href="http://scxk.nmpa.gov.cn:81/xk/">http://scxk.nmpa.gov.cn:81/xk/&lt;/a>&lt;/li>
&lt;li>需求：
&lt;ul>
&lt;li>将首页中每一家企业的详情数据进行爬取&lt;/li>
&lt;li>将前5页的数据爬取即可&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>难点：
&lt;ul>
&lt;li>用不到数据解析&lt;/li>
&lt;li>所有的数据都是动态加载出来的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>提示：
&lt;ul>
&lt;li>先爬取一家企业，然后再爬取多家&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#228b22"># 爬取第1、2页的公司ID&lt;/span>
url = &lt;span style="color:#cd5555">&amp;#39;http://scxk.nmpa.gov.cn:81/xk/itownet/portalAction.do?method=getXkzsList&amp;#39;&lt;/span>
all_id_list = []
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> page &lt;span style="color:#8b008b">in&lt;/span> &lt;span style="color:#658b00">range&lt;/span>(&lt;span style="color:#b452cd">1&lt;/span>,&lt;span style="color:#b452cd">3&lt;/span>):
data = {
&lt;span style="color:#cd5555">&amp;#39;on&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;true&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;page&amp;#39;&lt;/span>: &lt;span style="color:#658b00">str&lt;/span>(page),
&lt;span style="color:#cd5555">&amp;#39;pageSize&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;15&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;productName&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;conditionType&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;1&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;applyname&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>,
&lt;span style="color:#cd5555">&amp;#39;applysn&amp;#39;&lt;/span>: &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>
}
response = requests.post(url=url, data=data, headers = headers)
json_text = response.json()
&lt;span style="color:#228b22"># all_id_list用于二级页面数据获取&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> &lt;span style="color:#658b00">dict&lt;/span> &lt;span style="color:#8b008b">in&lt;/span> json_text[&lt;span style="color:#cd5555">&amp;#39;list&amp;#39;&lt;/span>]:
ID = &lt;span style="color:#658b00">dict&lt;/span>[&lt;span style="color:#cd5555">&amp;#39;ID&amp;#39;&lt;/span>]
all_id_list.append(ID)
&lt;span style="color:#228b22"># 根据ID，爬取二级页面&lt;/span>
all_data_list = []
post_url = &lt;span style="color:#cd5555">&amp;#39;http://scxk.nmpa.gov.cn:81/xk/itownet/portalAction.do?method=getXkzsById&amp;#39;&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> &lt;span style="color:#658b00">id&lt;/span> &lt;span style="color:#8b008b">in&lt;/span> all_id_list:
post_data = {
&lt;span style="color:#cd5555">&amp;#39;id&amp;#39;&lt;/span>:&lt;span style="color:#658b00">id&lt;/span>
}
response = requests.post(url=post_url,data=post_data,headers=headers)
json_text = response.json()
&lt;span style="color:#658b00">print&lt;/span>(json_text[&lt;span style="color:#cd5555">&amp;#39;businessPerson&amp;#39;&lt;/span>])
all_data_list.append(json_text)
&lt;span style="color:#228b22"># 持久化存储&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">json&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;./allData.json&amp;#39;&lt;/span>,&lt;span style="color:#cd5555">&amp;#39;w&amp;#39;&lt;/span>,encoding=&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> fp:
json.dump(all_data_list,fp=fp,ensure_ascii=&lt;span style="color:#8b008b;font-weight:bold">False&lt;/span>)
&lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;Over!!!&amp;#39;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
- https://a390177226.github.io/python/requests/ - zzb2021.</description></item></channel></rss>